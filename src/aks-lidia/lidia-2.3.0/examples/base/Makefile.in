# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Paths.def
applexec_PROGRAMS = udigit_appl$(EXEEXT) \
	random_generator_appl$(EXEEXT) signal_lidia_appl$(EXEEXT) \
	timer_appl$(EXEEXT) bigcomplex_appl$(EXEEXT) \
	bigfloat_appl$(EXEEXT) bigfloat_int_appl$(EXEEXT) \
	bigint_appl$(EXEEXT) cornacchia_appl$(EXEEXT) \
	is_power_appl$(EXEEXT) is_prime_appl$(EXEEXT) \
	is_square_appl$(EXEEXT) ressol_appl$(EXEEXT) \
	bigmod_appl$(EXEEXT) multi_bigmod_appl$(EXEEXT) \
	bigrational_appl$(EXEEXT) crt_appl$(EXEEXT) \
	rational_factorization_appl$(EXEEXT) divisors_appl$(EXEEXT) \
	prime_list_appl$(EXEEXT) prime_list_bench_appl$(EXEEXT) \
	udigit_mod_appl$(EXEEXT) xbigfloat_appl$(EXEEXT) \
	xdouble_appl$(EXEEXT) bigint_factor_appl$(EXEEXT) \
	jenkins_traub_appl$(EXEEXT) polynomial_cast_appl$(EXEEXT) \
	resultant_check_appl$(EXEEXT) hash_table_appl$(EXEEXT) \
	indexed_hash_table_appl$(EXEEXT) vector_appl$(EXEEXT) \
	base_matrix_appl$(EXEEXT) power_functions_appl$(EXEEXT)
subdir = examples/base
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(applexecdir)"
applexecPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(applexec_PROGRAMS)
am_base_matrix_appl_OBJECTS = base_matrix_appl.$(OBJEXT)
base_matrix_appl_OBJECTS = $(am_base_matrix_appl_OBJECTS)
base_matrix_appl_LDADD = $(LDADD)
base_matrix_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigcomplex_appl_OBJECTS = bigcomplex_appl.$(OBJEXT)
bigcomplex_appl_OBJECTS = $(am_bigcomplex_appl_OBJECTS)
bigcomplex_appl_LDADD = $(LDADD)
bigcomplex_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigfloat_appl_OBJECTS = bigfloat_appl.$(OBJEXT)
bigfloat_appl_OBJECTS = $(am_bigfloat_appl_OBJECTS)
bigfloat_appl_LDADD = $(LDADD)
bigfloat_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigfloat_int_appl_OBJECTS = bigfloat_int_appl.$(OBJEXT)
bigfloat_int_appl_OBJECTS = $(am_bigfloat_int_appl_OBJECTS)
bigfloat_int_appl_LDADD = $(LDADD)
bigfloat_int_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigint_appl_OBJECTS = bigint_appl.$(OBJEXT)
bigint_appl_OBJECTS = $(am_bigint_appl_OBJECTS)
bigint_appl_LDADD = $(LDADD)
bigint_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigint_factor_appl_OBJECTS = bigint_factor_appl.$(OBJEXT)
bigint_factor_appl_OBJECTS = $(am_bigint_factor_appl_OBJECTS)
bigint_factor_appl_LDADD = $(LDADD)
bigint_factor_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigmod_appl_OBJECTS = bigmod_appl.$(OBJEXT)
bigmod_appl_OBJECTS = $(am_bigmod_appl_OBJECTS)
bigmod_appl_LDADD = $(LDADD)
bigmod_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_bigrational_appl_OBJECTS = bigrational_appl.$(OBJEXT)
bigrational_appl_OBJECTS = $(am_bigrational_appl_OBJECTS)
bigrational_appl_LDADD = $(LDADD)
bigrational_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_cornacchia_appl_OBJECTS = cornacchia_appl.$(OBJEXT)
cornacchia_appl_OBJECTS = $(am_cornacchia_appl_OBJECTS)
cornacchia_appl_LDADD = $(LDADD)
cornacchia_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_crt_appl_OBJECTS = crt_appl.$(OBJEXT)
crt_appl_OBJECTS = $(am_crt_appl_OBJECTS)
crt_appl_LDADD = $(LDADD)
crt_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_divisors_appl_OBJECTS = divisors_appl.$(OBJEXT)
divisors_appl_OBJECTS = $(am_divisors_appl_OBJECTS)
divisors_appl_LDADD = $(LDADD)
divisors_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_hash_table_appl_OBJECTS = hash_table_appl.$(OBJEXT)
hash_table_appl_OBJECTS = $(am_hash_table_appl_OBJECTS)
hash_table_appl_LDADD = $(LDADD)
hash_table_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_indexed_hash_table_appl_OBJECTS =  \
	indexed_hash_table_appl.$(OBJEXT)
indexed_hash_table_appl_OBJECTS =  \
	$(am_indexed_hash_table_appl_OBJECTS)
indexed_hash_table_appl_LDADD = $(LDADD)
indexed_hash_table_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_is_power_appl_OBJECTS = is_power_appl.$(OBJEXT)
is_power_appl_OBJECTS = $(am_is_power_appl_OBJECTS)
is_power_appl_LDADD = $(LDADD)
is_power_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_is_prime_appl_OBJECTS = is_prime_appl.$(OBJEXT)
is_prime_appl_OBJECTS = $(am_is_prime_appl_OBJECTS)
is_prime_appl_LDADD = $(LDADD)
is_prime_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_is_square_appl_OBJECTS = is_square_appl.$(OBJEXT)
is_square_appl_OBJECTS = $(am_is_square_appl_OBJECTS)
is_square_appl_LDADD = $(LDADD)
is_square_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_jenkins_traub_appl_OBJECTS = jenkins_traub_appl.$(OBJEXT)
jenkins_traub_appl_OBJECTS = $(am_jenkins_traub_appl_OBJECTS)
jenkins_traub_appl_LDADD = $(LDADD)
jenkins_traub_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_multi_bigmod_appl_OBJECTS = multi_bigmod_appl.$(OBJEXT)
multi_bigmod_appl_OBJECTS = $(am_multi_bigmod_appl_OBJECTS)
multi_bigmod_appl_LDADD = $(LDADD)
multi_bigmod_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_polynomial_cast_appl_OBJECTS = polynomial_cast_appl.$(OBJEXT)
polynomial_cast_appl_OBJECTS = $(am_polynomial_cast_appl_OBJECTS)
polynomial_cast_appl_LDADD = $(LDADD)
polynomial_cast_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_power_functions_appl_OBJECTS = power_functions_appl.$(OBJEXT)
power_functions_appl_OBJECTS = $(am_power_functions_appl_OBJECTS)
power_functions_appl_LDADD = $(LDADD)
power_functions_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_prime_list_appl_OBJECTS = prime_list_appl.$(OBJEXT)
prime_list_appl_OBJECTS = $(am_prime_list_appl_OBJECTS)
prime_list_appl_LDADD = $(LDADD)
prime_list_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_prime_list_bench_appl_OBJECTS = prime_list_bench_appl.$(OBJEXT)
prime_list_bench_appl_OBJECTS = $(am_prime_list_bench_appl_OBJECTS)
prime_list_bench_appl_LDADD = $(LDADD)
prime_list_bench_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_random_generator_appl_OBJECTS = random_generator_appl.$(OBJEXT)
random_generator_appl_OBJECTS = $(am_random_generator_appl_OBJECTS)
random_generator_appl_LDADD = $(LDADD)
random_generator_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_rational_factorization_appl_OBJECTS =  \
	rational_factorization_appl.$(OBJEXT)
rational_factorization_appl_OBJECTS =  \
	$(am_rational_factorization_appl_OBJECTS)
rational_factorization_appl_LDADD = $(LDADD)
rational_factorization_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_ressol_appl_OBJECTS = ressol_appl.$(OBJEXT)
ressol_appl_OBJECTS = $(am_ressol_appl_OBJECTS)
ressol_appl_LDADD = $(LDADD)
ressol_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_resultant_check_appl_OBJECTS = resultant_check_appl.$(OBJEXT)
resultant_check_appl_OBJECTS = $(am_resultant_check_appl_OBJECTS)
resultant_check_appl_LDADD = $(LDADD)
resultant_check_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_signal_lidia_appl_OBJECTS = signal_lidia_appl.$(OBJEXT)
signal_lidia_appl_OBJECTS = $(am_signal_lidia_appl_OBJECTS)
signal_lidia_appl_LDADD = $(LDADD)
signal_lidia_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_timer_appl_OBJECTS = timer_appl.$(OBJEXT)
timer_appl_OBJECTS = $(am_timer_appl_OBJECTS)
timer_appl_LDADD = $(LDADD)
timer_appl_DEPENDENCIES = $(LIDIA_LTLIB)
nodist_udigit_appl_OBJECTS = udigit_appl.$(OBJEXT)
udigit_appl_OBJECTS = $(nodist_udigit_appl_OBJECTS)
udigit_appl_LDADD = $(LDADD)
udigit_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_udigit_mod_appl_OBJECTS = udigit_mod_appl.$(OBJEXT)
udigit_mod_appl_OBJECTS = $(am_udigit_mod_appl_OBJECTS)
udigit_mod_appl_LDADD = $(LDADD)
udigit_mod_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_vector_appl_OBJECTS = vector_appl.$(OBJEXT)
vector_appl_OBJECTS = $(am_vector_appl_OBJECTS)
vector_appl_LDADD = $(LDADD)
vector_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_xbigfloat_appl_OBJECTS = xbigfloat_appl.$(OBJEXT)
xbigfloat_appl_OBJECTS = $(am_xbigfloat_appl_OBJECTS)
xbigfloat_appl_LDADD = $(LDADD)
xbigfloat_appl_DEPENDENCIES = $(LIDIA_LTLIB)
am_xdouble_appl_OBJECTS = xdouble_appl.$(OBJEXT)
xdouble_appl_OBJECTS = $(am_xdouble_appl_OBJECTS)
xdouble_appl_LDADD = $(LDADD)
xdouble_appl_DEPENDENCIES = $(LIDIA_LTLIB)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(base_matrix_appl_SOURCES) $(bigcomplex_appl_SOURCES) \
	$(bigfloat_appl_SOURCES) $(bigfloat_int_appl_SOURCES) \
	$(bigint_appl_SOURCES) $(bigint_factor_appl_SOURCES) \
	$(bigmod_appl_SOURCES) $(bigrational_appl_SOURCES) \
	$(cornacchia_appl_SOURCES) $(crt_appl_SOURCES) \
	$(divisors_appl_SOURCES) $(hash_table_appl_SOURCES) \
	$(indexed_hash_table_appl_SOURCES) $(is_power_appl_SOURCES) \
	$(is_prime_appl_SOURCES) $(is_square_appl_SOURCES) \
	$(jenkins_traub_appl_SOURCES) $(multi_bigmod_appl_SOURCES) \
	$(polynomial_cast_appl_SOURCES) \
	$(power_functions_appl_SOURCES) $(prime_list_appl_SOURCES) \
	$(prime_list_bench_appl_SOURCES) \
	$(random_generator_appl_SOURCES) \
	$(rational_factorization_appl_SOURCES) $(ressol_appl_SOURCES) \
	$(resultant_check_appl_SOURCES) $(signal_lidia_appl_SOURCES) \
	$(timer_appl_SOURCES) $(nodist_udigit_appl_SOURCES) \
	$(udigit_mod_appl_SOURCES) $(vector_appl_SOURCES) \
	$(xbigfloat_appl_SOURCES) $(xdouble_appl_SOURCES)
DIST_SOURCES = $(base_matrix_appl_SOURCES) $(bigcomplex_appl_SOURCES) \
	$(bigfloat_appl_SOURCES) $(bigfloat_int_appl_SOURCES) \
	$(bigint_appl_SOURCES) $(bigint_factor_appl_SOURCES) \
	$(bigmod_appl_SOURCES) $(bigrational_appl_SOURCES) \
	$(cornacchia_appl_SOURCES) $(crt_appl_SOURCES) \
	$(divisors_appl_SOURCES) $(hash_table_appl_SOURCES) \
	$(indexed_hash_table_appl_SOURCES) $(is_power_appl_SOURCES) \
	$(is_prime_appl_SOURCES) $(is_square_appl_SOURCES) \
	$(jenkins_traub_appl_SOURCES) $(multi_bigmod_appl_SOURCES) \
	$(polynomial_cast_appl_SOURCES) \
	$(power_functions_appl_SOURCES) $(prime_list_appl_SOURCES) \
	$(prime_list_bench_appl_SOURCES) \
	$(random_generator_appl_SOURCES) \
	$(rational_factorization_appl_SOURCES) $(ressol_appl_SOURCES) \
	$(resultant_check_appl_SOURCES) $(signal_lidia_appl_SOURCES) \
	$(timer_appl_SOURCES) $(udigit_mod_appl_SOURCES) \
	$(vector_appl_SOURCES) $(xbigfloat_appl_SOURCES) \
	$(xdouble_appl_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR)

applexecdir = $(pkglibdir)/examples
LDADD = $(LIDIA_LTLIB)
nodist_udigit_appl_SOURCES = \
	$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc

random_generator_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc

signal_lidia_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc

timer_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc

bigcomplex_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc

bigfloat_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc

bigfloat_int_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc

bigint_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc

cornacchia_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc

is_power_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc

is_prime_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc

is_square_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc

ressol_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc

bigmod_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc

multi_bigmod_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc

bigrational_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc

crt_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc

rational_factorization_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc

divisors_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc

prime_list_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc

prime_list_bench_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc

udigit_mod_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc

xbigfloat_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc

xdouble_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc

bigint_factor_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc

jenkins_traub_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc

polynomial_cast_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc

resultant_check_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc

hash_table_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc

indexed_hash_table_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc

vector_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc

base_matrix_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc

power_functions_appl_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc

EXTRA_DIST = \
	$(LIDIA_CONFIG_SRCDIR)/udigit/cln/udigit_appl.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/gmp/udigit_appl.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/libI/udigit_appl.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/piologie/udigit_appl.cc \
	\
	${LIDIA_BASE_SRCDIR}/hash_table/hash_table_appl_int.dat \
	${LIDIA_BASE_SRCDIR}/hash_table/indexed_hash_table_appl_int.dat \
	${LIDIA_BASE_SRCDIR}/matrix/dense_input_bigint \
	${LIDIA_BASE_SRCDIR}/matrix/dense_input_int \
	${LIDIA_BASE_SRCDIR}/matrix/dense_input_long \
	${LIDIA_BASE_SRCDIR}/matrix/dense_ring_matrix_appl_bigint.dat \
	${LIDIA_BASE_SRCDIR}/matrix/dense_ring_matrix_appl_int.dat \
	${LIDIA_BASE_SRCDIR}/matrix/dense_ring_matrix_appl_long.dat \
	${LIDIA_BASE_SRCDIR}/matrix/input_bigfloat \
	${LIDIA_BASE_SRCDIR}/matrix/input_bigint \
	${LIDIA_BASE_SRCDIR}/matrix/input_double \
	${LIDIA_BASE_SRCDIR}/matrix/input_int \
	${LIDIA_BASE_SRCDIR}/matrix/input_long \
	${LIDIA_BASE_SRCDIR}/matrix/matrix_inst \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_input_bigint \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_input_int \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_input_long \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_ring_matrix_appl_bigint.dat \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_ring_matrix_appl_int.dat \
	${LIDIA_BASE_SRCDIR}/matrix/sparse_ring_matrix_appl_long.dat \
	${LIDIA_BASE_SRCDIR}/polynomial/test_roots.1 \
	${LIDIA_BASE_SRCDIR}/polynomial/test_roots.1.cmp \
	${LIDIA_BASE_SRCDIR}/polynomial/test_roots_appl.cc \
	${LIDIA_BASE_SRCDIR}/simple_classes/bigint/test_bigint_io.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  examples/base/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  examples/base/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-applexecPROGRAMS: $(applexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(applexecdir)" || $(MKDIR_P) "$(DESTDIR)$(applexecdir)"
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(applexecPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(applexecdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(applexecPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(applexecdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-applexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(applexecdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(applexecdir)/$$f"; \
	done

clean-applexecPROGRAMS:
	@list='$(applexec_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
base_matrix_appl$(EXEEXT): $(base_matrix_appl_OBJECTS) $(base_matrix_appl_DEPENDENCIES) 
	@rm -f base_matrix_appl$(EXEEXT)
	$(CXXLINK) $(base_matrix_appl_OBJECTS) $(base_matrix_appl_LDADD) $(LIBS)
bigcomplex_appl$(EXEEXT): $(bigcomplex_appl_OBJECTS) $(bigcomplex_appl_DEPENDENCIES) 
	@rm -f bigcomplex_appl$(EXEEXT)
	$(CXXLINK) $(bigcomplex_appl_OBJECTS) $(bigcomplex_appl_LDADD) $(LIBS)
bigfloat_appl$(EXEEXT): $(bigfloat_appl_OBJECTS) $(bigfloat_appl_DEPENDENCIES) 
	@rm -f bigfloat_appl$(EXEEXT)
	$(CXXLINK) $(bigfloat_appl_OBJECTS) $(bigfloat_appl_LDADD) $(LIBS)
bigfloat_int_appl$(EXEEXT): $(bigfloat_int_appl_OBJECTS) $(bigfloat_int_appl_DEPENDENCIES) 
	@rm -f bigfloat_int_appl$(EXEEXT)
	$(CXXLINK) $(bigfloat_int_appl_OBJECTS) $(bigfloat_int_appl_LDADD) $(LIBS)
bigint_appl$(EXEEXT): $(bigint_appl_OBJECTS) $(bigint_appl_DEPENDENCIES) 
	@rm -f bigint_appl$(EXEEXT)
	$(CXXLINK) $(bigint_appl_OBJECTS) $(bigint_appl_LDADD) $(LIBS)
bigint_factor_appl$(EXEEXT): $(bigint_factor_appl_OBJECTS) $(bigint_factor_appl_DEPENDENCIES) 
	@rm -f bigint_factor_appl$(EXEEXT)
	$(CXXLINK) $(bigint_factor_appl_OBJECTS) $(bigint_factor_appl_LDADD) $(LIBS)
bigmod_appl$(EXEEXT): $(bigmod_appl_OBJECTS) $(bigmod_appl_DEPENDENCIES) 
	@rm -f bigmod_appl$(EXEEXT)
	$(CXXLINK) $(bigmod_appl_OBJECTS) $(bigmod_appl_LDADD) $(LIBS)
bigrational_appl$(EXEEXT): $(bigrational_appl_OBJECTS) $(bigrational_appl_DEPENDENCIES) 
	@rm -f bigrational_appl$(EXEEXT)
	$(CXXLINK) $(bigrational_appl_OBJECTS) $(bigrational_appl_LDADD) $(LIBS)
cornacchia_appl$(EXEEXT): $(cornacchia_appl_OBJECTS) $(cornacchia_appl_DEPENDENCIES) 
	@rm -f cornacchia_appl$(EXEEXT)
	$(CXXLINK) $(cornacchia_appl_OBJECTS) $(cornacchia_appl_LDADD) $(LIBS)
crt_appl$(EXEEXT): $(crt_appl_OBJECTS) $(crt_appl_DEPENDENCIES) 
	@rm -f crt_appl$(EXEEXT)
	$(CXXLINK) $(crt_appl_OBJECTS) $(crt_appl_LDADD) $(LIBS)
divisors_appl$(EXEEXT): $(divisors_appl_OBJECTS) $(divisors_appl_DEPENDENCIES) 
	@rm -f divisors_appl$(EXEEXT)
	$(CXXLINK) $(divisors_appl_OBJECTS) $(divisors_appl_LDADD) $(LIBS)
hash_table_appl$(EXEEXT): $(hash_table_appl_OBJECTS) $(hash_table_appl_DEPENDENCIES) 
	@rm -f hash_table_appl$(EXEEXT)
	$(CXXLINK) $(hash_table_appl_OBJECTS) $(hash_table_appl_LDADD) $(LIBS)
indexed_hash_table_appl$(EXEEXT): $(indexed_hash_table_appl_OBJECTS) $(indexed_hash_table_appl_DEPENDENCIES) 
	@rm -f indexed_hash_table_appl$(EXEEXT)
	$(CXXLINK) $(indexed_hash_table_appl_OBJECTS) $(indexed_hash_table_appl_LDADD) $(LIBS)
is_power_appl$(EXEEXT): $(is_power_appl_OBJECTS) $(is_power_appl_DEPENDENCIES) 
	@rm -f is_power_appl$(EXEEXT)
	$(CXXLINK) $(is_power_appl_OBJECTS) $(is_power_appl_LDADD) $(LIBS)
is_prime_appl$(EXEEXT): $(is_prime_appl_OBJECTS) $(is_prime_appl_DEPENDENCIES) 
	@rm -f is_prime_appl$(EXEEXT)
	$(CXXLINK) $(is_prime_appl_OBJECTS) $(is_prime_appl_LDADD) $(LIBS)
is_square_appl$(EXEEXT): $(is_square_appl_OBJECTS) $(is_square_appl_DEPENDENCIES) 
	@rm -f is_square_appl$(EXEEXT)
	$(CXXLINK) $(is_square_appl_OBJECTS) $(is_square_appl_LDADD) $(LIBS)
jenkins_traub_appl$(EXEEXT): $(jenkins_traub_appl_OBJECTS) $(jenkins_traub_appl_DEPENDENCIES) 
	@rm -f jenkins_traub_appl$(EXEEXT)
	$(CXXLINK) $(jenkins_traub_appl_OBJECTS) $(jenkins_traub_appl_LDADD) $(LIBS)
multi_bigmod_appl$(EXEEXT): $(multi_bigmod_appl_OBJECTS) $(multi_bigmod_appl_DEPENDENCIES) 
	@rm -f multi_bigmod_appl$(EXEEXT)
	$(CXXLINK) $(multi_bigmod_appl_OBJECTS) $(multi_bigmod_appl_LDADD) $(LIBS)
polynomial_cast_appl$(EXEEXT): $(polynomial_cast_appl_OBJECTS) $(polynomial_cast_appl_DEPENDENCIES) 
	@rm -f polynomial_cast_appl$(EXEEXT)
	$(CXXLINK) $(polynomial_cast_appl_OBJECTS) $(polynomial_cast_appl_LDADD) $(LIBS)
power_functions_appl$(EXEEXT): $(power_functions_appl_OBJECTS) $(power_functions_appl_DEPENDENCIES) 
	@rm -f power_functions_appl$(EXEEXT)
	$(CXXLINK) $(power_functions_appl_OBJECTS) $(power_functions_appl_LDADD) $(LIBS)
prime_list_appl$(EXEEXT): $(prime_list_appl_OBJECTS) $(prime_list_appl_DEPENDENCIES) 
	@rm -f prime_list_appl$(EXEEXT)
	$(CXXLINK) $(prime_list_appl_OBJECTS) $(prime_list_appl_LDADD) $(LIBS)
prime_list_bench_appl$(EXEEXT): $(prime_list_bench_appl_OBJECTS) $(prime_list_bench_appl_DEPENDENCIES) 
	@rm -f prime_list_bench_appl$(EXEEXT)
	$(CXXLINK) $(prime_list_bench_appl_OBJECTS) $(prime_list_bench_appl_LDADD) $(LIBS)
random_generator_appl$(EXEEXT): $(random_generator_appl_OBJECTS) $(random_generator_appl_DEPENDENCIES) 
	@rm -f random_generator_appl$(EXEEXT)
	$(CXXLINK) $(random_generator_appl_OBJECTS) $(random_generator_appl_LDADD) $(LIBS)
rational_factorization_appl$(EXEEXT): $(rational_factorization_appl_OBJECTS) $(rational_factorization_appl_DEPENDENCIES) 
	@rm -f rational_factorization_appl$(EXEEXT)
	$(CXXLINK) $(rational_factorization_appl_OBJECTS) $(rational_factorization_appl_LDADD) $(LIBS)
ressol_appl$(EXEEXT): $(ressol_appl_OBJECTS) $(ressol_appl_DEPENDENCIES) 
	@rm -f ressol_appl$(EXEEXT)
	$(CXXLINK) $(ressol_appl_OBJECTS) $(ressol_appl_LDADD) $(LIBS)
resultant_check_appl$(EXEEXT): $(resultant_check_appl_OBJECTS) $(resultant_check_appl_DEPENDENCIES) 
	@rm -f resultant_check_appl$(EXEEXT)
	$(CXXLINK) $(resultant_check_appl_OBJECTS) $(resultant_check_appl_LDADD) $(LIBS)
signal_lidia_appl$(EXEEXT): $(signal_lidia_appl_OBJECTS) $(signal_lidia_appl_DEPENDENCIES) 
	@rm -f signal_lidia_appl$(EXEEXT)
	$(CXXLINK) $(signal_lidia_appl_OBJECTS) $(signal_lidia_appl_LDADD) $(LIBS)
timer_appl$(EXEEXT): $(timer_appl_OBJECTS) $(timer_appl_DEPENDENCIES) 
	@rm -f timer_appl$(EXEEXT)
	$(CXXLINK) $(timer_appl_OBJECTS) $(timer_appl_LDADD) $(LIBS)
udigit_appl$(EXEEXT): $(udigit_appl_OBJECTS) $(udigit_appl_DEPENDENCIES) 
	@rm -f udigit_appl$(EXEEXT)
	$(CXXLINK) $(udigit_appl_OBJECTS) $(udigit_appl_LDADD) $(LIBS)
udigit_mod_appl$(EXEEXT): $(udigit_mod_appl_OBJECTS) $(udigit_mod_appl_DEPENDENCIES) 
	@rm -f udigit_mod_appl$(EXEEXT)
	$(CXXLINK) $(udigit_mod_appl_OBJECTS) $(udigit_mod_appl_LDADD) $(LIBS)
vector_appl$(EXEEXT): $(vector_appl_OBJECTS) $(vector_appl_DEPENDENCIES) 
	@rm -f vector_appl$(EXEEXT)
	$(CXXLINK) $(vector_appl_OBJECTS) $(vector_appl_LDADD) $(LIBS)
xbigfloat_appl$(EXEEXT): $(xbigfloat_appl_OBJECTS) $(xbigfloat_appl_DEPENDENCIES) 
	@rm -f xbigfloat_appl$(EXEEXT)
	$(CXXLINK) $(xbigfloat_appl_OBJECTS) $(xbigfloat_appl_LDADD) $(LIBS)
xdouble_appl$(EXEEXT): $(xdouble_appl_OBJECTS) $(xdouble_appl_DEPENDENCIES) 
	@rm -f xdouble_appl$(EXEEXT)
	$(CXXLINK) $(xdouble_appl_OBJECTS) $(xdouble_appl_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_matrix_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigcomplex_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_int_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint_factor_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigmod_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigrational_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cornacchia_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crt_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/divisors_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_table_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indexed_hash_table_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_power_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_prime_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_square_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jenkins_traub_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_bigmod_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polynomial_cast_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/power_functions_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_list_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_list_bench_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random_generator_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rational_factorization_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ressol_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resultant_check_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_lidia_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/udigit_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/udigit_mod_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xbigfloat_appl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdouble_appl.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

base_matrix_appl.o: $(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base_matrix_appl.o -MD -MP -MF $(DEPDIR)/base_matrix_appl.Tpo -c -o base_matrix_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/base_matrix_appl.Tpo $(DEPDIR)/base_matrix_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc' object='base_matrix_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base_matrix_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc

base_matrix_appl.obj: $(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base_matrix_appl.obj -MD -MP -MF $(DEPDIR)/base_matrix_appl.Tpo -c -o base_matrix_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/base_matrix_appl.Tpo $(DEPDIR)/base_matrix_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc' object='base_matrix_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base_matrix_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_appl.cc'; fi`

bigcomplex_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex_appl.o -MD -MP -MF $(DEPDIR)/bigcomplex_appl.Tpo -c -o bigcomplex_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex_appl.Tpo $(DEPDIR)/bigcomplex_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc' object='bigcomplex_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc

bigcomplex_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex_appl.obj -MD -MP -MF $(DEPDIR)/bigcomplex_appl.Tpo -c -o bigcomplex_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex_appl.Tpo $(DEPDIR)/bigcomplex_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc' object='bigcomplex_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_appl.cc'; fi`

bigfloat_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_appl.o -MD -MP -MF $(DEPDIR)/bigfloat_appl.Tpo -c -o bigfloat_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_appl.Tpo $(DEPDIR)/bigfloat_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc' object='bigfloat_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc

bigfloat_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_appl.obj -MD -MP -MF $(DEPDIR)/bigfloat_appl.Tpo -c -o bigfloat_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_appl.Tpo $(DEPDIR)/bigfloat_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc' object='bigfloat_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_appl.cc'; fi`

bigfloat_int_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_int_appl.o -MD -MP -MF $(DEPDIR)/bigfloat_int_appl.Tpo -c -o bigfloat_int_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_int_appl.Tpo $(DEPDIR)/bigfloat_int_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc' object='bigfloat_int_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_int_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc

bigfloat_int_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_int_appl.obj -MD -MP -MF $(DEPDIR)/bigfloat_int_appl.Tpo -c -o bigfloat_int_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_int_appl.Tpo $(DEPDIR)/bigfloat_int_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc' object='bigfloat_int_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_int_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_appl.cc'; fi`

bigint_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_appl.o -MD -MP -MF $(DEPDIR)/bigint_appl.Tpo -c -o bigint_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_appl.Tpo $(DEPDIR)/bigint_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc' object='bigint_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc

bigint_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_appl.obj -MD -MP -MF $(DEPDIR)/bigint_appl.Tpo -c -o bigint_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_appl.Tpo $(DEPDIR)/bigint_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc' object='bigint_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_appl.cc'; fi`

bigint_factor_appl.o: $(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_factor_appl.o -MD -MP -MF $(DEPDIR)/bigint_factor_appl.Tpo -c -o bigint_factor_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_factor_appl.Tpo $(DEPDIR)/bigint_factor_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc' object='bigint_factor_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_factor_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc

bigint_factor_appl.obj: $(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_factor_appl.obj -MD -MP -MF $(DEPDIR)/bigint_factor_appl.Tpo -c -o bigint_factor_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_factor_appl.Tpo $(DEPDIR)/bigint_factor_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc' object='bigint_factor_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_factor_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/factorization/bigint/bigint_factor_appl.cc'; fi`

bigmod_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigmod_appl.o -MD -MP -MF $(DEPDIR)/bigmod_appl.Tpo -c -o bigmod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigmod_appl.Tpo $(DEPDIR)/bigmod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc' object='bigmod_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigmod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc

bigmod_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigmod_appl.obj -MD -MP -MF $(DEPDIR)/bigmod_appl.Tpo -c -o bigmod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigmod_appl.Tpo $(DEPDIR)/bigmod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc' object='bigmod_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigmod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_appl.cc'; fi`

bigrational_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigrational_appl.o -MD -MP -MF $(DEPDIR)/bigrational_appl.Tpo -c -o bigrational_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigrational_appl.Tpo $(DEPDIR)/bigrational_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc' object='bigrational_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigrational_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc

bigrational_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigrational_appl.obj -MD -MP -MF $(DEPDIR)/bigrational_appl.Tpo -c -o bigrational_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigrational_appl.Tpo $(DEPDIR)/bigrational_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc' object='bigrational_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigrational_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_appl.cc'; fi`

cornacchia_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cornacchia_appl.o -MD -MP -MF $(DEPDIR)/cornacchia_appl.Tpo -c -o cornacchia_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cornacchia_appl.Tpo $(DEPDIR)/cornacchia_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc' object='cornacchia_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cornacchia_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc

cornacchia_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cornacchia_appl.obj -MD -MP -MF $(DEPDIR)/cornacchia_appl.Tpo -c -o cornacchia_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cornacchia_appl.Tpo $(DEPDIR)/cornacchia_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc' object='cornacchia_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cornacchia_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia_appl.cc'; fi`

crt_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crt_appl.o -MD -MP -MF $(DEPDIR)/crt_appl.Tpo -c -o crt_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/crt_appl.Tpo $(DEPDIR)/crt_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc' object='crt_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crt_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc

crt_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crt_appl.obj -MD -MP -MF $(DEPDIR)/crt_appl.Tpo -c -o crt_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/crt_appl.Tpo $(DEPDIR)/crt_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc' object='crt_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crt_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_appl.cc'; fi`

divisors_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT divisors_appl.o -MD -MP -MF $(DEPDIR)/divisors_appl.Tpo -c -o divisors_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/divisors_appl.Tpo $(DEPDIR)/divisors_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc' object='divisors_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o divisors_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc

divisors_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT divisors_appl.obj -MD -MP -MF $(DEPDIR)/divisors_appl.Tpo -c -o divisors_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/divisors_appl.Tpo $(DEPDIR)/divisors_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc' object='divisors_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o divisors_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors_appl.cc'; fi`

hash_table_appl.o: $(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_table_appl.o -MD -MP -MF $(DEPDIR)/hash_table_appl.Tpo -c -o hash_table_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/hash_table_appl.Tpo $(DEPDIR)/hash_table_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc' object='hash_table_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_table_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc

hash_table_appl.obj: $(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_table_appl.obj -MD -MP -MF $(DEPDIR)/hash_table_appl.Tpo -c -o hash_table_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/hash_table_appl.Tpo $(DEPDIR)/hash_table_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc' object='hash_table_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_table_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/hash_table/hash_table_appl.cc'; fi`

indexed_hash_table_appl.o: $(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT indexed_hash_table_appl.o -MD -MP -MF $(DEPDIR)/indexed_hash_table_appl.Tpo -c -o indexed_hash_table_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/indexed_hash_table_appl.Tpo $(DEPDIR)/indexed_hash_table_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc' object='indexed_hash_table_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o indexed_hash_table_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc

indexed_hash_table_appl.obj: $(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT indexed_hash_table_appl.obj -MD -MP -MF $(DEPDIR)/indexed_hash_table_appl.Tpo -c -o indexed_hash_table_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/indexed_hash_table_appl.Tpo $(DEPDIR)/indexed_hash_table_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc' object='indexed_hash_table_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o indexed_hash_table_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/hash_table/indexed_hash_table_appl.cc'; fi`

is_power_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_power_appl.o -MD -MP -MF $(DEPDIR)/is_power_appl.Tpo -c -o is_power_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_power_appl.Tpo $(DEPDIR)/is_power_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc' object='is_power_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_power_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc

is_power_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_power_appl.obj -MD -MP -MF $(DEPDIR)/is_power_appl.Tpo -c -o is_power_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_power_appl.Tpo $(DEPDIR)/is_power_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc' object='is_power_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_power_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power_appl.cc'; fi`

is_prime_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_prime_appl.o -MD -MP -MF $(DEPDIR)/is_prime_appl.Tpo -c -o is_prime_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_prime_appl.Tpo $(DEPDIR)/is_prime_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc' object='is_prime_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_prime_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc

is_prime_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_prime_appl.obj -MD -MP -MF $(DEPDIR)/is_prime_appl.Tpo -c -o is_prime_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_prime_appl.Tpo $(DEPDIR)/is_prime_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc' object='is_prime_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_prime_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime_appl.cc'; fi`

is_square_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_square_appl.o -MD -MP -MF $(DEPDIR)/is_square_appl.Tpo -c -o is_square_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_square_appl.Tpo $(DEPDIR)/is_square_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc' object='is_square_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_square_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc

is_square_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_square_appl.obj -MD -MP -MF $(DEPDIR)/is_square_appl.Tpo -c -o is_square_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_square_appl.Tpo $(DEPDIR)/is_square_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc' object='is_square_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_square_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square_appl.cc'; fi`

jenkins_traub_appl.o: $(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jenkins_traub_appl.o -MD -MP -MF $(DEPDIR)/jenkins_traub_appl.Tpo -c -o jenkins_traub_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/jenkins_traub_appl.Tpo $(DEPDIR)/jenkins_traub_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc' object='jenkins_traub_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jenkins_traub_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc

jenkins_traub_appl.obj: $(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jenkins_traub_appl.obj -MD -MP -MF $(DEPDIR)/jenkins_traub_appl.Tpo -c -o jenkins_traub_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/jenkins_traub_appl.Tpo $(DEPDIR)/jenkins_traub_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc' object='jenkins_traub_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jenkins_traub_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub_appl.cc'; fi`

multi_bigmod_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_bigmod_appl.o -MD -MP -MF $(DEPDIR)/multi_bigmod_appl.Tpo -c -o multi_bigmod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/multi_bigmod_appl.Tpo $(DEPDIR)/multi_bigmod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc' object='multi_bigmod_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_bigmod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc

multi_bigmod_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_bigmod_appl.obj -MD -MP -MF $(DEPDIR)/multi_bigmod_appl.Tpo -c -o multi_bigmod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/multi_bigmod_appl.Tpo $(DEPDIR)/multi_bigmod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc' object='multi_bigmod_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_bigmod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod_appl.cc'; fi`

polynomial_cast_appl.o: $(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polynomial_cast_appl.o -MD -MP -MF $(DEPDIR)/polynomial_cast_appl.Tpo -c -o polynomial_cast_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/polynomial_cast_appl.Tpo $(DEPDIR)/polynomial_cast_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc' object='polynomial_cast_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polynomial_cast_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc

polynomial_cast_appl.obj: $(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polynomial_cast_appl.obj -MD -MP -MF $(DEPDIR)/polynomial_cast_appl.Tpo -c -o polynomial_cast_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/polynomial_cast_appl.Tpo $(DEPDIR)/polynomial_cast_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc' object='polynomial_cast_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polynomial_cast_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/polynomial_cast_appl.cc'; fi`

power_functions_appl.o: $(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT power_functions_appl.o -MD -MP -MF $(DEPDIR)/power_functions_appl.Tpo -c -o power_functions_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/power_functions_appl.Tpo $(DEPDIR)/power_functions_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc' object='power_functions_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o power_functions_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc

power_functions_appl.obj: $(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT power_functions_appl.obj -MD -MP -MF $(DEPDIR)/power_functions_appl.Tpo -c -o power_functions_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/power_functions_appl.Tpo $(DEPDIR)/power_functions_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc' object='power_functions_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o power_functions_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/misc/power_functions_appl.cc'; fi`

prime_list_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_list_appl.o -MD -MP -MF $(DEPDIR)/prime_list_appl.Tpo -c -o prime_list_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/prime_list_appl.Tpo $(DEPDIR)/prime_list_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc' object='prime_list_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_list_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc

prime_list_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_list_appl.obj -MD -MP -MF $(DEPDIR)/prime_list_appl.Tpo -c -o prime_list_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/prime_list_appl.Tpo $(DEPDIR)/prime_list_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc' object='prime_list_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_list_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_appl.cc'; fi`

prime_list_bench_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_list_bench_appl.o -MD -MP -MF $(DEPDIR)/prime_list_bench_appl.Tpo -c -o prime_list_bench_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/prime_list_bench_appl.Tpo $(DEPDIR)/prime_list_bench_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc' object='prime_list_bench_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_list_bench_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc

prime_list_bench_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_list_bench_appl.obj -MD -MP -MF $(DEPDIR)/prime_list_bench_appl.Tpo -c -o prime_list_bench_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/prime_list_bench_appl.Tpo $(DEPDIR)/prime_list_bench_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc' object='prime_list_bench_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_list_bench_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list_bench_appl.cc'; fi`

random_generator_appl.o: $(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random_generator_appl.o -MD -MP -MF $(DEPDIR)/random_generator_appl.Tpo -c -o random_generator_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/random_generator_appl.Tpo $(DEPDIR)/random_generator_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc' object='random_generator_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random_generator_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc

random_generator_appl.obj: $(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random_generator_appl.obj -MD -MP -MF $(DEPDIR)/random_generator_appl.Tpo -c -o random_generator_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/random_generator_appl.Tpo $(DEPDIR)/random_generator_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc' object='random_generator_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random_generator_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/random_generator_appl.cc'; fi`

rational_factorization_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rational_factorization_appl.o -MD -MP -MF $(DEPDIR)/rational_factorization_appl.Tpo -c -o rational_factorization_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/rational_factorization_appl.Tpo $(DEPDIR)/rational_factorization_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc' object='rational_factorization_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rational_factorization_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc

rational_factorization_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rational_factorization_appl.obj -MD -MP -MF $(DEPDIR)/rational_factorization_appl.Tpo -c -o rational_factorization_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/rational_factorization_appl.Tpo $(DEPDIR)/rational_factorization_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc' object='rational_factorization_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rational_factorization_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization_appl.cc'; fi`

ressol_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ressol_appl.o -MD -MP -MF $(DEPDIR)/ressol_appl.Tpo -c -o ressol_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ressol_appl.Tpo $(DEPDIR)/ressol_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc' object='ressol_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ressol_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc

ressol_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ressol_appl.obj -MD -MP -MF $(DEPDIR)/ressol_appl.Tpo -c -o ressol_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ressol_appl.Tpo $(DEPDIR)/ressol_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc' object='ressol_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ressol_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol_appl.cc'; fi`

resultant_check_appl.o: $(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resultant_check_appl.o -MD -MP -MF $(DEPDIR)/resultant_check_appl.Tpo -c -o resultant_check_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/resultant_check_appl.Tpo $(DEPDIR)/resultant_check_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc' object='resultant_check_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resultant_check_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc

resultant_check_appl.obj: $(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT resultant_check_appl.obj -MD -MP -MF $(DEPDIR)/resultant_check_appl.Tpo -c -o resultant_check_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/resultant_check_appl.Tpo $(DEPDIR)/resultant_check_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc' object='resultant_check_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o resultant_check_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/polynomial/resultant_check_appl.cc'; fi`

signal_lidia_appl.o: $(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT signal_lidia_appl.o -MD -MP -MF $(DEPDIR)/signal_lidia_appl.Tpo -c -o signal_lidia_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/signal_lidia_appl.Tpo $(DEPDIR)/signal_lidia_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc' object='signal_lidia_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o signal_lidia_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc

signal_lidia_appl.obj: $(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT signal_lidia_appl.obj -MD -MP -MF $(DEPDIR)/signal_lidia_appl.Tpo -c -o signal_lidia_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/signal_lidia_appl.Tpo $(DEPDIR)/signal_lidia_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc' object='signal_lidia_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o signal_lidia_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/signal_lidia_appl.cc'; fi`

timer_appl.o: $(LIDIA_BASE_SRCDIR)/system/timer_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer_appl.o -MD -MP -MF $(DEPDIR)/timer_appl.Tpo -c -o timer_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/timer_appl.Tpo $(DEPDIR)/timer_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc' object='timer_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc

timer_appl.obj: $(LIDIA_BASE_SRCDIR)/system/timer_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer_appl.obj -MD -MP -MF $(DEPDIR)/timer_appl.Tpo -c -o timer_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/timer_appl.Tpo $(DEPDIR)/timer_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc' object='timer_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/system/timer_appl.cc'; fi`

udigit_appl.o: $(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit_appl.o -MD -MP -MF $(DEPDIR)/udigit_appl.Tpo -c -o udigit_appl.o `test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit_appl.Tpo $(DEPDIR)/udigit_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc' object='udigit_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit_appl.o `test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc

udigit_appl.obj: $(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit_appl.obj -MD -MP -MF $(DEPDIR)/udigit_appl.Tpo -c -o udigit_appl.obj `if test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; then $(CYGPATH_W) '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit_appl.Tpo $(DEPDIR)/udigit_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc' object='udigit_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit_appl.obj `if test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; then $(CYGPATH_W) '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_CONFIG_LINKDIR)/udigit/udigit_appl.cc'; fi`

udigit_mod_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit_mod_appl.o -MD -MP -MF $(DEPDIR)/udigit_mod_appl.Tpo -c -o udigit_mod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit_mod_appl.Tpo $(DEPDIR)/udigit_mod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc' object='udigit_mod_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit_mod_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc

udigit_mod_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit_mod_appl.obj -MD -MP -MF $(DEPDIR)/udigit_mod_appl.Tpo -c -o udigit_mod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit_mod_appl.Tpo $(DEPDIR)/udigit_mod_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc' object='udigit_mod_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit_mod_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod_appl.cc'; fi`

vector_appl.o: $(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector_appl.o -MD -MP -MF $(DEPDIR)/vector_appl.Tpo -c -o vector_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/vector_appl.Tpo $(DEPDIR)/vector_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc' object='vector_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc

vector_appl.obj: $(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector_appl.obj -MD -MP -MF $(DEPDIR)/vector_appl.Tpo -c -o vector_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/vector_appl.Tpo $(DEPDIR)/vector_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc' object='vector_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/vector/vector_appl.cc'; fi`

xbigfloat_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xbigfloat_appl.o -MD -MP -MF $(DEPDIR)/xbigfloat_appl.Tpo -c -o xbigfloat_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xbigfloat_appl.Tpo $(DEPDIR)/xbigfloat_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc' object='xbigfloat_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xbigfloat_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc

xbigfloat_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xbigfloat_appl.obj -MD -MP -MF $(DEPDIR)/xbigfloat_appl.Tpo -c -o xbigfloat_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xbigfloat_appl.Tpo $(DEPDIR)/xbigfloat_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc' object='xbigfloat_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xbigfloat_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat_appl.cc'; fi`

xdouble_appl.o: $(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xdouble_appl.o -MD -MP -MF $(DEPDIR)/xdouble_appl.Tpo -c -o xdouble_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xdouble_appl.Tpo $(DEPDIR)/xdouble_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc' object='xdouble_appl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xdouble_appl.o `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc

xdouble_appl.obj: $(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xdouble_appl.obj -MD -MP -MF $(DEPDIR)/xdouble_appl.Tpo -c -o xdouble_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xdouble_appl.Tpo $(DEPDIR)/xdouble_appl.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc' object='xdouble_appl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xdouble_appl.obj `if test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; then $(CYGPATH_W) '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble_appl.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(applexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-applexecPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-applexecPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-applexecPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-applexecPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-applexecPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-applexecPROGRAMS uninstall-hook


 #

$(applexec_PROGRAMS): $(LIDIA_LTLIB)

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(applexecdir) \
		$(DESTDIR)$(pkglibdir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
