# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(baseinclude_HEADERS) $(instantinclude_HEADERS) \
	$(matrixinclude_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(specialinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Paths.def
subdir = library/base
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/LiDIA/LiDIA.h \
	$(top_builddir)/include/LiDIA/path.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am_libLiDIA_base_la_OBJECTS = sf_check_gcd.lo sf_ecm.lo sf_factor.lo \
	sf_fermat_method.lo sf_mpqs.lo sf_pollard_p-1.lo \
	sf_pollard_rho.lo sf_trialdiv.lo sf_williams_p+1.lo \
	sf_bigint.lo bm_bigint_dense.lo bm_bigint_normal.lo \
	bm_bigint_sparse.lo bm_bigint_sub.lo bm_double_dense.lo \
	bm_double_normal.lo bm_double_sparse.lo bm_double_sub.lo \
	bm_int_dense.lo bm_int_normal.lo bm_int_sparse.lo \
	bm_int_sub.lo bm_long_dense.lo bm_long_normal.lo \
	bm_long_sparse.lo bm_long_sub.lo bpf_bigint.lo bpf_bigmod.lo \
	bv_bigcomplex.lo bv_bigfloat.lo bv_bigint.lo bv_bigmod.lo \
	bv_bigrational.lo bv_char.lo bv_double.lo bv_int.lo bv_long.lo \
	bv_param_desc_ptr.lo bv_pp_sf_bigint.lo bv_rf_single_factor.lo \
	bv_udigit_mod.lo bv_xdouble.lo fact_bigint.lo fv_bigint.lo \
	fv_bigrational.lo fv_double.lo fv_int.lo fv_long.lo \
	ht_bigint.lo ht_int.lo iht_bigint.lo iht_int.lo lpf_bigint.lo \
	lpf_bigmod.lo mv_bigfloat.lo mv_bigint.lo mv_bigmod.lo \
	mv_bigrational.lo mv_double.lo mv_int.lo mv_long.lo \
	mv_udigit_mod.lo mv_xdouble.lo rcl_bigint.lo spf_bigint.lo \
	spf_bigmod.lo sv_bigint.lo sv_bigrational.lo sv_double.lo \
	sv_int.lo sv_long.lo sv_pp_sf_bigint.lo sv_rf_single_factor.lo \
	base_matrix_bigmod.lo matrix_error_msg.lo \
	bigcomplex_polynomial.lo bigfloat_polynomial.lo \
	bigint_polynomial.lo bigrational_polynomial.lo \
	cast_bigcomplex_polynomial.lo cast_bigfloat_polynomial.lo \
	cast_bigrational_polynomial.lo jenkins_traub.lo \
	poly_error_msg.lo bigcomplex.lo bigcomplex_io.lo \
	bigcomplex_trans.lo bigfloat.lo bigfloat2.lo bigfloat_const.lo \
	bigfloat_exp.lo bigfloat_hyp.lo bigfloat_io.lo \
	bigfloat_miscfunc.lo bigfloat_trig.lo bigfloat_int.lo \
	bigfloat_int_trans.lo bigint_share.lo chinese_remainder.lo \
	cornacchia.lo fermat.lo is_power.lo is_prime.lo is_square.lo \
	jacobi.lo multiple_gcd.lo nearest.lo newton_root.lo \
	next_prime.lo power_mod.lo previous_prime.lo ressol.lo \
	base_bigmod.lo bigmod.lo bigmod_lib.lo multi_bigmod.lo \
	bigrational.lo bigrational_io.lo crt.lo crt_table.lo \
	ec_point.lo ecm.lo ecm_primes.lo file_f.lo mpqs.lo \
	rational_factorization.lo trialdiv.lo lanczos.lo \
	lanczos_small_matrix.lo lanczos_spmatrix.lo \
	lanczos_spvector.lo lanczos_vblock.lo process.lo \
	matrix_GL2Z.lo divisors.lo modular_functions.lo prime_list.lo \
	single_precision.lo udigit_mod.lo xbigfloat.lo xdouble.lo \
	debug.lo error.lo file_lidia.lo info.lo memory.lo osstream.lo \
	param_desc.lo param_desc_instant.lo precondition_error.lo \
	precondition_error_instant.lo random_generator.lo \
	signal_lidia.lo timer.lo warning.lo vector_error_msg.lo
nodist_libLiDIA_base_la_OBJECTS = bigint.lo udigit.lo
libLiDIA_base_la_OBJECTS = $(am_libLiDIA_base_la_OBJECTS) \
	$(nodist_libLiDIA_base_la_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am_bytes_to_int_flag_generator_OBJECTS =  \
	bytes_to_int_flag_generator.$(OBJEXT)
bytes_to_int_flag_generator_OBJECTS =  \
	$(am_bytes_to_int_flag_generator_OBJECTS)
bytes_to_int_flag_generator_LDADD = $(LDADD)
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libLiDIA_base_la_SOURCES) \
	$(EXTRA_libLiDIA_base_la_SOURCES) \
	$(nodist_libLiDIA_base_la_SOURCES) \
	$(bytes_to_int_flag_generator_SOURCES)
DIST_SOURCES = $(libLiDIA_base_la_SOURCES) \
	$(EXTRA_libLiDIA_base_la_SOURCES) \
	$(bytes_to_int_flag_generator_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(baseincludedir)" \
	"$(DESTDIR)$(instantincludedir)" \
	"$(DESTDIR)$(matrixincludedir)" \
	"$(DESTDIR)$(kernelincludedir)" "$(DESTDIR)$(pkgincludedir)" \
	"$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(specialincludedir)"
baseincludeHEADERS_INSTALL = $(INSTALL_HEADER)
instantincludeHEADERS_INSTALL = $(INSTALL_HEADER)
matrixincludeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_kernelincludeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
specialincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(baseinclude_HEADERS) $(instantinclude_HEADERS) \
	$(matrixinclude_HEADERS) $(nodist_kernelinclude_HEADERS) \
	$(nodist_pkginclude_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS) $(specialinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIBTEX = @BIBTEX@
BUNZIP2 = @BUNZIP2@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GUNZIP = @GUNZIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LATEX2HTML = @LATEX2HTML@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@

# We don't want to have $(LIBS) in the convenience library.
# FIXME: This is not safe against command-line overrides.
LIBS = 
LIBTOOL = @LIBTOOL@
LIDIA_BASE_XLIBOBJS = @LIDIA_BASE_XLIBOBJS@
LIDIA_BASE_XLTLIBOBJS = @LIDIA_BASE_XLTLIBOBJS@
LIDIA_LTCLIBS = @LIDIA_LTCLIBS@
LIDIA_LT_XLIBOBJS = @LIDIA_LT_XLIBOBJS@
LIDIA_LT_XLTLIBOBJS = @LIDIA_LT_XLTLIBOBJS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKG_DIRS = @PKG_DIRS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2DVI = @TEXI2DVI@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = 1.5 nostdinc
ETAGS_ARGS = -C -l c++

#
# Use the following prefix for stuff that is normally found in ${top_srcdir}
# but must be specified in a simple-minded fashion (i.e. ${top_builddir}).
# Note that the normal path can be made by prepending ${srcdir}/,
# though that results in weird paths like ../../../library/base/../../xxx.
#
topdir = ${top_builddir}

#
# Main directories of the LiDIA packages
#
LIDIA_DATADIR = ${topdir}/share
LIDIA_PKGDATADIR = ${LIDIA_DATADIR}/LiDIA
LIDIA_CONFIG_LINKDIR = ${top_builddir}/src/base/interfaces
LIDIA_CONFIG_SRCDIR = ${topdir}/src/interfaces
LIDIA_CONFIG_INCLUDEDIR = ${top_builddir}/include
LIDIA_CONFIG_PKGINCLUDEDIR = ${LIDIA_CONFIG_INCLUDEDIR}/LiDIA
LIDIA_PORTAB_SRCDIR = ${topdir}/src/portability
LIDIA_BASE_SRCDIR = ${topdir}/src/base
LIDIA_BASE_INCLUDEDIR = ${LIDIA_BASE_SRCDIR}/include
LIDIA_BASE_PKGINCLUDEDIR = ${LIDIA_BASE_INCLUDEDIR}/LiDIA
LIDIA_FF_SRCDIR = ${topdir}/src/finite_fields
LIDIA_FF_INCLUDEDIR = ${LIDIA_FF_SRCDIR}/include
LIDIA_FF_PKGINCLUDEDIR = ${LIDIA_FF_INCLUDEDIR}/LiDIA
LIDIA_LA_SRCDIR = ${topdir}/src/linear_algebra
LIDIA_LA_INCLUDEDIR = ${LIDIA_LA_SRCDIR}/include
LIDIA_LA_PKGINCLUDEDIR = ${LIDIA_LA_INCLUDEDIR}/LiDIA
LIDIA_LT_SRCDIR = ${topdir}/src/lattices
LIDIA_LT_INCLUDEDIR = ${LIDIA_LT_SRCDIR}/include
LIDIA_LT_PKGINCLUDEDIR = ${LIDIA_LT_INCLUDEDIR}/LiDIA
LIDIA_NF_SRCDIR = ${topdir}/src/number_fields
LIDIA_NF_INCLUDEDIR = ${LIDIA_NF_SRCDIR}/include
LIDIA_NF_PKGINCLUDEDIR = ${LIDIA_NF_INCLUDEDIR}/LiDIA
LIDIA_EC_SRCDIR = ${topdir}/src/elliptic_curves
LIDIA_EC_INCLUDEDIR = ${LIDIA_EC_SRCDIR}/include
LIDIA_EC_PKGINCLUDEDIR = ${LIDIA_EC_INCLUDEDIR}/LiDIA
LIDIA_ECO_SRCDIR = ${topdir}/src/ec_order
LIDIA_ECO_INCLUDEDIR = ${LIDIA_ECO_SRCDIR}/include
LIDIA_ECO_PKGINCLUDEDIR = ${LIDIA_ECO_INCLUDEDIR}/LiDIA
LIDIA_GEC_SRCDIR = ${topdir}/src/gec
LIDIA_GEC_INCLUDEDIR = ${LIDIA_GEC_SRCDIR}/include
LIDIA_GEC_PKGINCLUDEDIR = ${LIDIA_GEC_INCLUDEDIR}/LiDIA

#
# Path to the Libtool library libLiDIA.la resulting from the build
#
LIDIA_LTLIB = ${top_builddir}/library/libLiDIA.la

#
# libLiDIA's version info for Libtool,
# specified as a triplet CURRENT:REVISION:AGE of non-negative integers.
# CURRENT identifies the set of object interfaces exported by the library.
# REVISION specifies CURRENT's implementation release number.
# AGE specifies how many interface sets preceding CURRENT are supported.
# The precise meaning of the version info numbers is defined in the Libtool
# texinfo manual, together with rules for updating them.
# Never try to achieve similarity with the package version!
#
LIDIA_LTVERSION = 7:0:0

#
# Paths to each package's Libtool convenience library.
# The configure-determined variable LIDIA_LTCLIBS refers
# to a subset of these variables.
#
LIDIA_BASE_LTCLIB = ${top_builddir}/library/base/libLiDIA-base.la
LIDIA_FF_LTCLIB = ${top_builddir}/library/finite_fields/libLiDIA-FF.la
LIDIA_LA_LTCLIB = ${top_builddir}/library/linear_algebra/libLiDIA-LA.la
LIDIA_LT_LTCLIB = ${top_builddir}/library/lattices/libLiDIA-LT.la
LIDIA_NF_LTCLIB = ${top_builddir}/library/number_fields/libLiDIA-NF.la
LIDIA_EC_LTCLIB = ${top_builddir}/library/elliptic_curves/libLiDIA-EC.la
LIDIA_ECO_LTCLIB = ${top_builddir}/library/ec_order/libLiDIA-ECO.la
LIDIA_GEC_LTCLIB = ${top_builddir}/library/gec/libLiDIA-GEC.la
AM_CPPFLAGS = \
	-I$(LIDIA_CONFIG_INCLUDEDIR) \
	-I$(LIDIA_BASE_INCLUDEDIR) -I$(srcdir)/$(LIDIA_BASE_INCLUDEDIR)

noinst_LTLIBRARIES = libLiDIA-base.la

# Add the configured portability object files
libLiDIA_base_la_LIBADD = @LIDIA_BASE_XLTLIBOBJS@
libLiDIA_base_la_DEPENDENCIES = @LIDIA_BASE_XLTLIBOBJS@
nodist_libLiDIA_base_la_SOURCES = \
	$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc \
	$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc

libLiDIA_base_la_SOURCES = \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc \
	$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc \
	$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc \
	$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc \
	$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc \
	$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc \
	$(LIDIA_BASE_SRCDIR)/system/debug.cc \
	$(LIDIA_BASE_SRCDIR)/system/error.cc \
	$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc \
	$(LIDIA_BASE_SRCDIR)/system/info.cc \
	$(LIDIA_BASE_SRCDIR)/system/memory.cc \
	$(LIDIA_BASE_SRCDIR)/system/osstream.cc \
	$(LIDIA_BASE_SRCDIR)/system/param_desc.cc \
	$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc \
	$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc \
	$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc \
	$(LIDIA_BASE_SRCDIR)/system/random_generator.cc \
	$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc \
	$(LIDIA_BASE_SRCDIR)/system/timer.cc \
	$(LIDIA_BASE_SRCDIR)/system/warning.cc \
	$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc

EXTRA_libLiDIA_base_la_SOURCES = \
	$(LIDIA_PORTAB_SRCDIR)/stlport.cc \
	$(LIDIA_PORTAB_SRCDIR)/random.c \
	$(LIDIA_PORTAB_SRCDIR)/random.h

kernelincludedir = $(pkgincludedir)/kernel
instantincludedir = $(pkgincludedir)/instantiate
specialincludedir = $(pkgincludedir)/specialization
matrixincludedir = $(pkgincludedir)/matrix
baseincludedir = $(pkgincludedir)/base
instantinclude_HEADERS = \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/factorization.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/hash_table.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/pair.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/power_functions.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/residue_class_list.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/instantiate/vector.cc

specialinclude_HEADERS = \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/bigcomplex.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/bigfloat.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/bigint.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/bigmod.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/bigrational.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/polynomial.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/single_factor.special \
	$(LIDIA_BASE_PKGINCLUDEDIR)/specialization/udigit_mod.special

matrixinclude_HEADERS = \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/base_matrix_algorithms.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/base_matrix_algorithms.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_base_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_base_matrix_kernel.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_field_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_field_matrix_kernel.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_ring_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/dense_ring_matrix_kernel.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/field_matrix_algorithms.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/field_matrix_algorithms.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/matrix_representation.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/ring_matrix_algorithms.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/ring_matrix_algorithms.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_base_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_base_matrix_kernel.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_field_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_field_matrix_kernel.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_ring_matrix_kernel.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix/sparse_ring_matrix_kernel.h

baseinclude_HEADERS = \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/array_functions.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/b_value.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/base_bigmod.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/base_factor.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/base_factor.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/ecm_primes.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/file_io_class.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/interface_lib.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/poly_intern.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/poly_intern.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/ppair.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/ppair.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/residue_class_list.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/residue_class_list.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base/sf_bigint.h

pkginclude_HEADERS = \
	$(LIDIA_BASE_PKGINCLUDEDIR)/arith.inl \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base_vector.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/base_vector.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigcomplex.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigcomplex_polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigfloat.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigfloat_config.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigfloat_int.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigfloat_polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigint.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigint_polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigmod.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigrational.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/bigrational_polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/comparator.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/crt.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/crt_table.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/debug.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_base_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_base_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_field_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_field_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_ring_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/dense_ring_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/error.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/factorization.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/factorization.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/field_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/field_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/field_polynomial.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/field_polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/file_vector.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/file_vector.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/hash_table.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/hash_table.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/indexed_hash_table.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/indexed_hash_table.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/info.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/isstream.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lanczos.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lidia_defines.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lidia_file.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lidia_reference_counter.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lidia_signal.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/lidia_vector.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/math_vector.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/math_vector.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix_GL2Z.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/matrix_flags.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/memory.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/modular_functions.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/modular_operations.inl \
	$(LIDIA_BASE_PKGINCLUDEDIR)/mpqs_timing.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/multi_bigmod.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/nmbrthry_functions.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/osstream.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/pair.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/pair.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/polynomial.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/power_functions.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/power_functions.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/param_desc.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/param_desc.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/precondition_error.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/precondition_error.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/prime_list.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/random_generator.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/rational_factorization.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/ring_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/ring_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/single_factor.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/single_factor.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sort_vector.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sort_vector.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_base_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_base_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_field_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_field_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_ring_matrix.cc \
	$(LIDIA_BASE_PKGINCLUDEDIR)/sparse_ring_matrix.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/timer.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/udigit.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/udigit_mod.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/vector_flags.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/vector_representation.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/warning.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/xbigfloat.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/xdouble.h \
	$(LIDIA_BASE_PKGINCLUDEDIR)/xdouble.inl \
	$(LIDIA_BASE_PKGINCLUDEDIR)/xerror.h


# The following file lists are configuration-dependent.
# Therefore, wildcards are used.  These don't work with VPATH,
# but this stuff really is in the build tree.  That's why it works.

# Common members:
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/LiDIA.h \
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/path.h
nodist_pkginclude_HEADERS = \
	$(LIDIA_CONFIG_PKGINCLUDEDIR)/*.h


# Common members:
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/kernel/bigint_def.h \
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/kernel/bigint_interface.h \
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/kernel/udigit_def.h \
#	$(LIDIA_CONFIG_PKGINCLUDEDIR)/kernel/udigit_interface.h
nodist_kernelinclude_HEADERS = \
	$(LIDIA_CONFIG_PKGINCLUDEDIR)/kernel/*.h

BUILT_SOURCES = $(LIDIA_CONFIG_INCLUDEDIR)/bytes_to_int_flag.h
CLEANFILES = $(LIDIA_CONFIG_INCLUDEDIR)/bytes_to_int_flag.h
noinst_HEADERS = $(LIDIA_CONFIG_INCLUDEDIR)/bytes_to_int_flag.h
noinst_PROGRAMS = bytes_to_int_flag_generator$(EXEEXT)
bytes_to_int_flag_generator_SOURCES = \
	$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc

EXTRA_DIST = \
	$(LIDIA_CONFIG_SRCDIR)/bigint/cln/bigint.cc \
	$(LIDIA_CONFIG_SRCDIR)/bigint/cln/bigint_def.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/cln/bigint_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/gmp/bigint.cc \
	$(LIDIA_CONFIG_SRCDIR)/bigint/gmp/bigint_def.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/gmp/bigint_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/libI/bigint.cc \
	$(LIDIA_CONFIG_SRCDIR)/bigint/libI/bigint_def.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/libI/bigint_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/piologie/bigint.cc \
	$(LIDIA_CONFIG_SRCDIR)/bigint/piologie/bigint_def.h \
	$(LIDIA_CONFIG_SRCDIR)/bigint/piologie/bigint_interface.h \
	\
	$(LIDIA_CONFIG_SRCDIR)/udigit/cln/udigit.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/cln/udigit_def.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/cln/udigit_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/gmp/udigit.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/gmp/udigit128.gmp.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/gmp/udigit_def.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/gmp/udigit_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/libI/udigit.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/libI/udigit_def.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/libI/udigit_interface.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/piologie/udigit.cc \
	$(LIDIA_CONFIG_SRCDIR)/udigit/piologie/udigit_def.h \
	$(LIDIA_CONFIG_SRCDIR)/udigit/piologie/udigit_interface.h \
	\
	$(LIDIA_CONFIG_SRCDIR)/memory/boehm/gmm.h \
	$(LIDIA_CONFIG_SRCDIR)/memory/boehm/makefile \
	$(LIDIA_CONFIG_SRCDIR)/memory/boehm/new.c \
	$(LIDIA_CONFIG_SRCDIR)/memory/default/makefile \
	$(LIDIA_CONFIG_SRCDIR)/memory/dentzer/gmm.h \
	$(LIDIA_CONFIG_SRCDIR)/memory/dentzer/makefile \
	$(LIDIA_CONFIG_SRCDIR)/memory/dentzer/new.c \
	$(LIDIA_CONFIG_SRCDIR)/memory/malloc/gmm.h \
	$(LIDIA_CONFIG_SRCDIR)/memory/malloc/makefile \
	$(LIDIA_CONFIG_SRCDIR)/memory/malloc/new.c \
	\
	${LIDIA_BASE_SRCDIR}/simple_classes/factorization/test_machine.cc


# Unused CVS stuff
extra_stuff = \
	${LIDIA_BASE_SRCDIR}/matrix/ring_matrix_bigmod.cc.unfinished

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Paths.def $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  library/base/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  library/base/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libLiDIA-base.la: $(libLiDIA_base_la_OBJECTS) $(libLiDIA_base_la_DEPENDENCIES) 
	$(CXXLINK)  $(libLiDIA_base_la_OBJECTS) $(libLiDIA_base_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bytes_to_int_flag_generator$(EXEEXT): $(bytes_to_int_flag_generator_OBJECTS) $(bytes_to_int_flag_generator_DEPENDENCIES) 
	@rm -f bytes_to_int_flag_generator$(EXEEXT)
	$(CXXLINK) $(bytes_to_int_flag_generator_OBJECTS) $(bytes_to_int_flag_generator_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base_matrix_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigcomplex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigcomplex_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigcomplex_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigcomplex_trans.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_const.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_exp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_hyp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_int_trans.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_miscfunc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigfloat_trig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigint_share.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigmod_lib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigrational_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bigrational_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_bigint_dense.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_bigint_normal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_bigint_sparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_bigint_sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_double_dense.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_double_normal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_double_sparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_double_sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_int_dense.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_int_normal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_int_sparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_int_sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_long_dense.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_long_normal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_long_sparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bm_long_sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpf_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bigcomplex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bigfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_char.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_double.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_long.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_param_desc_ptr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_pp_sf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_rf_single_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bv_xdouble.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bytes_to_int_flag_generator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cast_bigcomplex_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cast_bigfloat_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cast_bigrational_polynomial.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chinese_remainder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cornacchia.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crt_table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/divisors.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ec_point.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecm_primes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fact_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fermat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_f.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_lidia.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fv_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fv_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fv_double.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fv_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fv_long.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ht_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ht_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iht_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iht_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_power.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/is_square.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jacobi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jenkins_traub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lanczos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lanczos_small_matrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lanczos_spmatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lanczos_spvector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lanczos_vblock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lpf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lpf_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_GL2Z.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_error_msg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/modular_functions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpqs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multi_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multiple_gcd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_bigfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_double.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_long.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mv_xdouble.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nearest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newton_root.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/next_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osstream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/param_desc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/param_desc_instant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly_error_msg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/power_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/precondition_error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/precondition_error_instant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/previous_prime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prime_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/process.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random_generator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rational_factorization.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rcl_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ressol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_check_gcd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_ecm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_fermat_method.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_mpqs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_pollard_p-1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_pollard_rho.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_trialdiv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sf_williams_p+1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal_lidia.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/single_precision.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spf_bigmod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stlport.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_bigrational.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_double.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_long.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_pp_sf_bigint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sv_rf_single_factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trialdiv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/udigit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/udigit_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vector_error_msg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/warning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xbigfloat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdouble.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

random.lo: $(LIDIA_PORTAB_SRCDIR)/random.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT random.lo -MD -MP -MF $(DEPDIR)/random.Tpo -c -o random.lo `test -f '$(LIDIA_PORTAB_SRCDIR)/random.c' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/random.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/random.Tpo $(DEPDIR)/random.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(LIDIA_PORTAB_SRCDIR)/random.c' object='random.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o random.lo `test -f '$(LIDIA_PORTAB_SRCDIR)/random.c' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/random.c

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

sf_check_gcd.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_check_gcd.lo -MD -MP -MF $(DEPDIR)/sf_check_gcd.Tpo -c -o sf_check_gcd.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_check_gcd.Tpo $(DEPDIR)/sf_check_gcd.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc' object='sf_check_gcd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_check_gcd.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_check_gcd.cc

sf_ecm.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_ecm.lo -MD -MP -MF $(DEPDIR)/sf_ecm.Tpo -c -o sf_ecm.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_ecm.Tpo $(DEPDIR)/sf_ecm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc' object='sf_ecm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_ecm.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_ecm.cc

sf_factor.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_factor.lo -MD -MP -MF $(DEPDIR)/sf_factor.Tpo -c -o sf_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_factor.Tpo $(DEPDIR)/sf_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc' object='sf_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_factor.cc

sf_fermat_method.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_fermat_method.lo -MD -MP -MF $(DEPDIR)/sf_fermat_method.Tpo -c -o sf_fermat_method.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_fermat_method.Tpo $(DEPDIR)/sf_fermat_method.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc' object='sf_fermat_method.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_fermat_method.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_fermat_method.cc

sf_mpqs.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_mpqs.lo -MD -MP -MF $(DEPDIR)/sf_mpqs.Tpo -c -o sf_mpqs.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_mpqs.Tpo $(DEPDIR)/sf_mpqs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc' object='sf_mpqs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_mpqs.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_mpqs.cc

sf_pollard_p-1.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_pollard_p-1.lo -MD -MP -MF $(DEPDIR)/sf_pollard_p-1.Tpo -c -o sf_pollard_p-1.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_pollard_p-1.Tpo $(DEPDIR)/sf_pollard_p-1.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc' object='sf_pollard_p-1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_pollard_p-1.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_p-1.cc

sf_pollard_rho.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_pollard_rho.lo -MD -MP -MF $(DEPDIR)/sf_pollard_rho.Tpo -c -o sf_pollard_rho.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_pollard_rho.Tpo $(DEPDIR)/sf_pollard_rho.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc' object='sf_pollard_rho.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_pollard_rho.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_pollard_rho.cc

sf_trialdiv.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_trialdiv.lo -MD -MP -MF $(DEPDIR)/sf_trialdiv.Tpo -c -o sf_trialdiv.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_trialdiv.Tpo $(DEPDIR)/sf_trialdiv.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc' object='sf_trialdiv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_trialdiv.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_trialdiv.cc

sf_williams_p+1.lo: $(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_williams_p+1.lo -MD -MP -MF $(DEPDIR)/sf_williams_p+1.Tpo -c -o sf_williams_p+1.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_williams_p+1.Tpo $(DEPDIR)/sf_williams_p+1.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc' object='sf_williams_p+1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_williams_p+1.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/bigint/sf_williams_p+1.cc

sf_bigint.lo: $(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sf_bigint.lo -MD -MP -MF $(DEPDIR)/sf_bigint.Tpo -c -o sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sf_bigint.Tpo $(DEPDIR)/sf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc' object='sf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/factorization/sf_bigint.cc

bm_bigint_dense.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_bigint_dense.lo -MD -MP -MF $(DEPDIR)/bm_bigint_dense.Tpo -c -o bm_bigint_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_bigint_dense.Tpo $(DEPDIR)/bm_bigint_dense.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc' object='bm_bigint_dense.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_bigint_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_dense.cc

bm_bigint_normal.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_bigint_normal.lo -MD -MP -MF $(DEPDIR)/bm_bigint_normal.Tpo -c -o bm_bigint_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_bigint_normal.Tpo $(DEPDIR)/bm_bigint_normal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc' object='bm_bigint_normal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_bigint_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_normal.cc

bm_bigint_sparse.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_bigint_sparse.lo -MD -MP -MF $(DEPDIR)/bm_bigint_sparse.Tpo -c -o bm_bigint_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_bigint_sparse.Tpo $(DEPDIR)/bm_bigint_sparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc' object='bm_bigint_sparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_bigint_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sparse.cc

bm_bigint_sub.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_bigint_sub.lo -MD -MP -MF $(DEPDIR)/bm_bigint_sub.Tpo -c -o bm_bigint_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_bigint_sub.Tpo $(DEPDIR)/bm_bigint_sub.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc' object='bm_bigint_sub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_bigint_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_bigint_sub.cc

bm_double_dense.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_double_dense.lo -MD -MP -MF $(DEPDIR)/bm_double_dense.Tpo -c -o bm_double_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_double_dense.Tpo $(DEPDIR)/bm_double_dense.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc' object='bm_double_dense.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_double_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_dense.cc

bm_double_normal.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_double_normal.lo -MD -MP -MF $(DEPDIR)/bm_double_normal.Tpo -c -o bm_double_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_double_normal.Tpo $(DEPDIR)/bm_double_normal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc' object='bm_double_normal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_double_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_normal.cc

bm_double_sparse.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_double_sparse.lo -MD -MP -MF $(DEPDIR)/bm_double_sparse.Tpo -c -o bm_double_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_double_sparse.Tpo $(DEPDIR)/bm_double_sparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc' object='bm_double_sparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_double_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sparse.cc

bm_double_sub.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_double_sub.lo -MD -MP -MF $(DEPDIR)/bm_double_sub.Tpo -c -o bm_double_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_double_sub.Tpo $(DEPDIR)/bm_double_sub.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc' object='bm_double_sub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_double_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_double_sub.cc

bm_int_dense.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_int_dense.lo -MD -MP -MF $(DEPDIR)/bm_int_dense.Tpo -c -o bm_int_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_int_dense.Tpo $(DEPDIR)/bm_int_dense.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc' object='bm_int_dense.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_int_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_dense.cc

bm_int_normal.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_int_normal.lo -MD -MP -MF $(DEPDIR)/bm_int_normal.Tpo -c -o bm_int_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_int_normal.Tpo $(DEPDIR)/bm_int_normal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc' object='bm_int_normal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_int_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_normal.cc

bm_int_sparse.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_int_sparse.lo -MD -MP -MF $(DEPDIR)/bm_int_sparse.Tpo -c -o bm_int_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_int_sparse.Tpo $(DEPDIR)/bm_int_sparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc' object='bm_int_sparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_int_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sparse.cc

bm_int_sub.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_int_sub.lo -MD -MP -MF $(DEPDIR)/bm_int_sub.Tpo -c -o bm_int_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_int_sub.Tpo $(DEPDIR)/bm_int_sub.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc' object='bm_int_sub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_int_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_int_sub.cc

bm_long_dense.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_long_dense.lo -MD -MP -MF $(DEPDIR)/bm_long_dense.Tpo -c -o bm_long_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_long_dense.Tpo $(DEPDIR)/bm_long_dense.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc' object='bm_long_dense.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_long_dense.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_dense.cc

bm_long_normal.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_long_normal.lo -MD -MP -MF $(DEPDIR)/bm_long_normal.Tpo -c -o bm_long_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_long_normal.Tpo $(DEPDIR)/bm_long_normal.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc' object='bm_long_normal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_long_normal.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_normal.cc

bm_long_sparse.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_long_sparse.lo -MD -MP -MF $(DEPDIR)/bm_long_sparse.Tpo -c -o bm_long_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_long_sparse.Tpo $(DEPDIR)/bm_long_sparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc' object='bm_long_sparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_long_sparse.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sparse.cc

bm_long_sub.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_long_sub.lo -MD -MP -MF $(DEPDIR)/bm_long_sub.Tpo -c -o bm_long_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bm_long_sub.Tpo $(DEPDIR)/bm_long_sub.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc' object='bm_long_sub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_long_sub.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bm_long_sub.cc

bpf_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpf_bigint.lo -MD -MP -MF $(DEPDIR)/bpf_bigint.Tpo -c -o bpf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bpf_bigint.Tpo $(DEPDIR)/bpf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc' object='bpf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigint.cc

bpf_bigmod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bpf_bigmod.lo -MD -MP -MF $(DEPDIR)/bpf_bigmod.Tpo -c -o bpf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bpf_bigmod.Tpo $(DEPDIR)/bpf_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc' object='bpf_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bpf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bpf_bigmod.cc

bv_bigcomplex.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bigcomplex.lo -MD -MP -MF $(DEPDIR)/bv_bigcomplex.Tpo -c -o bv_bigcomplex.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_bigcomplex.Tpo $(DEPDIR)/bv_bigcomplex.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc' object='bv_bigcomplex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bigcomplex.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigcomplex.cc

bv_bigfloat.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bigfloat.lo -MD -MP -MF $(DEPDIR)/bv_bigfloat.Tpo -c -o bv_bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_bigfloat.Tpo $(DEPDIR)/bv_bigfloat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc' object='bv_bigfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigfloat.cc

bv_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bigint.lo -MD -MP -MF $(DEPDIR)/bv_bigint.Tpo -c -o bv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_bigint.Tpo $(DEPDIR)/bv_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc' object='bv_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigint.cc

bv_bigmod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bigmod.lo -MD -MP -MF $(DEPDIR)/bv_bigmod.Tpo -c -o bv_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_bigmod.Tpo $(DEPDIR)/bv_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc' object='bv_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigmod.cc

bv_bigrational.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_bigrational.lo -MD -MP -MF $(DEPDIR)/bv_bigrational.Tpo -c -o bv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_bigrational.Tpo $(DEPDIR)/bv_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc' object='bv_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_bigrational.cc

bv_char.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_char.lo -MD -MP -MF $(DEPDIR)/bv_char.Tpo -c -o bv_char.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_char.Tpo $(DEPDIR)/bv_char.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc' object='bv_char.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_char.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_char.cc

bv_double.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_double.lo -MD -MP -MF $(DEPDIR)/bv_double.Tpo -c -o bv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_double.Tpo $(DEPDIR)/bv_double.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc' object='bv_double.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_double.cc

bv_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_int.lo -MD -MP -MF $(DEPDIR)/bv_int.Tpo -c -o bv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_int.Tpo $(DEPDIR)/bv_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc' object='bv_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_int.cc

bv_long.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_long.lo -MD -MP -MF $(DEPDIR)/bv_long.Tpo -c -o bv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_long.Tpo $(DEPDIR)/bv_long.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc' object='bv_long.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_long.cc

bv_param_desc_ptr.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_param_desc_ptr.lo -MD -MP -MF $(DEPDIR)/bv_param_desc_ptr.Tpo -c -o bv_param_desc_ptr.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_param_desc_ptr.Tpo $(DEPDIR)/bv_param_desc_ptr.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc' object='bv_param_desc_ptr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_param_desc_ptr.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_param_desc_ptr.cc

bv_pp_sf_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_pp_sf_bigint.lo -MD -MP -MF $(DEPDIR)/bv_pp_sf_bigint.Tpo -c -o bv_pp_sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_pp_sf_bigint.Tpo $(DEPDIR)/bv_pp_sf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc' object='bv_pp_sf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_pp_sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_pp_sf_bigint.cc

bv_rf_single_factor.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_rf_single_factor.lo -MD -MP -MF $(DEPDIR)/bv_rf_single_factor.Tpo -c -o bv_rf_single_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_rf_single_factor.Tpo $(DEPDIR)/bv_rf_single_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc' object='bv_rf_single_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_rf_single_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_rf_single_factor.cc

bv_udigit_mod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_udigit_mod.lo -MD -MP -MF $(DEPDIR)/bv_udigit_mod.Tpo -c -o bv_udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_udigit_mod.Tpo $(DEPDIR)/bv_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc' object='bv_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_udigit_mod.cc

bv_xdouble.lo: $(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bv_xdouble.lo -MD -MP -MF $(DEPDIR)/bv_xdouble.Tpo -c -o bv_xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bv_xdouble.Tpo $(DEPDIR)/bv_xdouble.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc' object='bv_xdouble.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bv_xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/bv_xdouble.cc

fact_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fact_bigint.lo -MD -MP -MF $(DEPDIR)/fact_bigint.Tpo -c -o fact_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fact_bigint.Tpo $(DEPDIR)/fact_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc' object='fact_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fact_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fact_bigint.cc

fv_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fv_bigint.lo -MD -MP -MF $(DEPDIR)/fv_bigint.Tpo -c -o fv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fv_bigint.Tpo $(DEPDIR)/fv_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc' object='fv_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigint.cc

fv_bigrational.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fv_bigrational.lo -MD -MP -MF $(DEPDIR)/fv_bigrational.Tpo -c -o fv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fv_bigrational.Tpo $(DEPDIR)/fv_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc' object='fv_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_bigrational.cc

fv_double.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fv_double.lo -MD -MP -MF $(DEPDIR)/fv_double.Tpo -c -o fv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fv_double.Tpo $(DEPDIR)/fv_double.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc' object='fv_double.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_double.cc

fv_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fv_int.lo -MD -MP -MF $(DEPDIR)/fv_int.Tpo -c -o fv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fv_int.Tpo $(DEPDIR)/fv_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc' object='fv_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_int.cc

fv_long.lo: $(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fv_long.lo -MD -MP -MF $(DEPDIR)/fv_long.Tpo -c -o fv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fv_long.Tpo $(DEPDIR)/fv_long.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc' object='fv_long.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/fv_long.cc

ht_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ht_bigint.lo -MD -MP -MF $(DEPDIR)/ht_bigint.Tpo -c -o ht_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ht_bigint.Tpo $(DEPDIR)/ht_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc' object='ht_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ht_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/ht_bigint.cc

ht_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ht_int.lo -MD -MP -MF $(DEPDIR)/ht_int.Tpo -c -o ht_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ht_int.Tpo $(DEPDIR)/ht_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc' object='ht_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ht_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/ht_int.cc

iht_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iht_bigint.lo -MD -MP -MF $(DEPDIR)/iht_bigint.Tpo -c -o iht_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/iht_bigint.Tpo $(DEPDIR)/iht_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc' object='iht_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iht_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/iht_bigint.cc

iht_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT iht_int.lo -MD -MP -MF $(DEPDIR)/iht_int.Tpo -c -o iht_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/iht_int.Tpo $(DEPDIR)/iht_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc' object='iht_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o iht_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/iht_int.cc

lpf_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lpf_bigint.lo -MD -MP -MF $(DEPDIR)/lpf_bigint.Tpo -c -o lpf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lpf_bigint.Tpo $(DEPDIR)/lpf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc' object='lpf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lpf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigint.cc

lpf_bigmod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lpf_bigmod.lo -MD -MP -MF $(DEPDIR)/lpf_bigmod.Tpo -c -o lpf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lpf_bigmod.Tpo $(DEPDIR)/lpf_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc' object='lpf_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lpf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/lpf_bigmod.cc

mv_bigfloat.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_bigfloat.lo -MD -MP -MF $(DEPDIR)/mv_bigfloat.Tpo -c -o mv_bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_bigfloat.Tpo $(DEPDIR)/mv_bigfloat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc' object='mv_bigfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigfloat.cc

mv_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_bigint.lo -MD -MP -MF $(DEPDIR)/mv_bigint.Tpo -c -o mv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_bigint.Tpo $(DEPDIR)/mv_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc' object='mv_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigint.cc

mv_bigmod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_bigmod.lo -MD -MP -MF $(DEPDIR)/mv_bigmod.Tpo -c -o mv_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_bigmod.Tpo $(DEPDIR)/mv_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc' object='mv_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigmod.cc

mv_bigrational.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_bigrational.lo -MD -MP -MF $(DEPDIR)/mv_bigrational.Tpo -c -o mv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_bigrational.Tpo $(DEPDIR)/mv_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc' object='mv_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_bigrational.cc

mv_double.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_double.lo -MD -MP -MF $(DEPDIR)/mv_double.Tpo -c -o mv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_double.Tpo $(DEPDIR)/mv_double.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc' object='mv_double.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_double.cc

mv_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_int.lo -MD -MP -MF $(DEPDIR)/mv_int.Tpo -c -o mv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_int.Tpo $(DEPDIR)/mv_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc' object='mv_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_int.cc

mv_long.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_long.lo -MD -MP -MF $(DEPDIR)/mv_long.Tpo -c -o mv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_long.Tpo $(DEPDIR)/mv_long.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc' object='mv_long.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_long.cc

mv_udigit_mod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_udigit_mod.lo -MD -MP -MF $(DEPDIR)/mv_udigit_mod.Tpo -c -o mv_udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_udigit_mod.Tpo $(DEPDIR)/mv_udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc' object='mv_udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_udigit_mod.cc

mv_xdouble.lo: $(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mv_xdouble.lo -MD -MP -MF $(DEPDIR)/mv_xdouble.Tpo -c -o mv_xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mv_xdouble.Tpo $(DEPDIR)/mv_xdouble.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc' object='mv_xdouble.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mv_xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/mv_xdouble.cc

rcl_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rcl_bigint.lo -MD -MP -MF $(DEPDIR)/rcl_bigint.Tpo -c -o rcl_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/rcl_bigint.Tpo $(DEPDIR)/rcl_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc' object='rcl_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rcl_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/rcl_bigint.cc

spf_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spf_bigint.lo -MD -MP -MF $(DEPDIR)/spf_bigint.Tpo -c -o spf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spf_bigint.Tpo $(DEPDIR)/spf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc' object='spf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigint.cc

spf_bigmod.lo: $(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spf_bigmod.lo -MD -MP -MF $(DEPDIR)/spf_bigmod.Tpo -c -o spf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/spf_bigmod.Tpo $(DEPDIR)/spf_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc' object='spf_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spf_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/spf_bigmod.cc

sv_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_bigint.lo -MD -MP -MF $(DEPDIR)/sv_bigint.Tpo -c -o sv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_bigint.Tpo $(DEPDIR)/sv_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc' object='sv_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigint.cc

sv_bigrational.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_bigrational.lo -MD -MP -MF $(DEPDIR)/sv_bigrational.Tpo -c -o sv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_bigrational.Tpo $(DEPDIR)/sv_bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc' object='sv_bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_bigrational.cc

sv_double.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_double.lo -MD -MP -MF $(DEPDIR)/sv_double.Tpo -c -o sv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_double.Tpo $(DEPDIR)/sv_double.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc' object='sv_double.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_double.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_double.cc

sv_int.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_int.lo -MD -MP -MF $(DEPDIR)/sv_int.Tpo -c -o sv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_int.Tpo $(DEPDIR)/sv_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc' object='sv_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_int.cc

sv_long.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_long.lo -MD -MP -MF $(DEPDIR)/sv_long.Tpo -c -o sv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_long.Tpo $(DEPDIR)/sv_long.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc' object='sv_long.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_long.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_long.cc

sv_pp_sf_bigint.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_pp_sf_bigint.lo -MD -MP -MF $(DEPDIR)/sv_pp_sf_bigint.Tpo -c -o sv_pp_sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_pp_sf_bigint.Tpo $(DEPDIR)/sv_pp_sf_bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc' object='sv_pp_sf_bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_pp_sf_bigint.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_pp_sf_bigint.cc

sv_rf_single_factor.lo: $(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sv_rf_single_factor.lo -MD -MP -MF $(DEPDIR)/sv_rf_single_factor.Tpo -c -o sv_rf_single_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/sv_rf_single_factor.Tpo $(DEPDIR)/sv_rf_single_factor.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc' object='sv_rf_single_factor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sv_rf_single_factor.lo `test -f '$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/instantiate/sv_rf_single_factor.cc

base_matrix_bigmod.lo: $(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base_matrix_bigmod.lo -MD -MP -MF $(DEPDIR)/base_matrix_bigmod.Tpo -c -o base_matrix_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/base_matrix_bigmod.Tpo $(DEPDIR)/base_matrix_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc' object='base_matrix_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base_matrix_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/base_matrix_bigmod.cc

matrix_error_msg.lo: $(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT matrix_error_msg.lo -MD -MP -MF $(DEPDIR)/matrix_error_msg.Tpo -c -o matrix_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/matrix_error_msg.Tpo $(DEPDIR)/matrix_error_msg.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc' object='matrix_error_msg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o matrix_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/matrix/matrix_error_msg.cc

bigcomplex_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex_polynomial.lo -MD -MP -MF $(DEPDIR)/bigcomplex_polynomial.Tpo -c -o bigcomplex_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex_polynomial.Tpo $(DEPDIR)/bigcomplex_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc' object='bigcomplex_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigcomplex_polynomial.cc

bigfloat_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_polynomial.lo -MD -MP -MF $(DEPDIR)/bigfloat_polynomial.Tpo -c -o bigfloat_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_polynomial.Tpo $(DEPDIR)/bigfloat_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc' object='bigfloat_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigfloat_polynomial.cc

bigint_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_polynomial.lo -MD -MP -MF $(DEPDIR)/bigint_polynomial.Tpo -c -o bigint_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_polynomial.Tpo $(DEPDIR)/bigint_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc' object='bigint_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigint_polynomial.cc

bigrational_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigrational_polynomial.lo -MD -MP -MF $(DEPDIR)/bigrational_polynomial.Tpo -c -o bigrational_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigrational_polynomial.Tpo $(DEPDIR)/bigrational_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc' object='bigrational_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigrational_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/bigrational_polynomial.cc

cast_bigcomplex_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cast_bigcomplex_polynomial.lo -MD -MP -MF $(DEPDIR)/cast_bigcomplex_polynomial.Tpo -c -o cast_bigcomplex_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cast_bigcomplex_polynomial.Tpo $(DEPDIR)/cast_bigcomplex_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc' object='cast_bigcomplex_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cast_bigcomplex_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigcomplex_polynomial.cc

cast_bigfloat_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cast_bigfloat_polynomial.lo -MD -MP -MF $(DEPDIR)/cast_bigfloat_polynomial.Tpo -c -o cast_bigfloat_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cast_bigfloat_polynomial.Tpo $(DEPDIR)/cast_bigfloat_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc' object='cast_bigfloat_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cast_bigfloat_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigfloat_polynomial.cc

cast_bigrational_polynomial.lo: $(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cast_bigrational_polynomial.lo -MD -MP -MF $(DEPDIR)/cast_bigrational_polynomial.Tpo -c -o cast_bigrational_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cast_bigrational_polynomial.Tpo $(DEPDIR)/cast_bigrational_polynomial.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc' object='cast_bigrational_polynomial.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cast_bigrational_polynomial.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/cast_bigrational_polynomial.cc

jenkins_traub.lo: $(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jenkins_traub.lo -MD -MP -MF $(DEPDIR)/jenkins_traub.Tpo -c -o jenkins_traub.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/jenkins_traub.Tpo $(DEPDIR)/jenkins_traub.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc' object='jenkins_traub.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jenkins_traub.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/jenkins_traub.cc

poly_error_msg.lo: $(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT poly_error_msg.lo -MD -MP -MF $(DEPDIR)/poly_error_msg.Tpo -c -o poly_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/poly_error_msg.Tpo $(DEPDIR)/poly_error_msg.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc' object='poly_error_msg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o poly_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/polynomial/poly_error_msg.cc

bigcomplex.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex.lo -MD -MP -MF $(DEPDIR)/bigcomplex.Tpo -c -o bigcomplex.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex.Tpo $(DEPDIR)/bigcomplex.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc' object='bigcomplex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex.cc

bigcomplex_io.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex_io.lo -MD -MP -MF $(DEPDIR)/bigcomplex_io.Tpo -c -o bigcomplex_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex_io.Tpo $(DEPDIR)/bigcomplex_io.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc' object='bigcomplex_io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_io.cc

bigcomplex_trans.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigcomplex_trans.lo -MD -MP -MF $(DEPDIR)/bigcomplex_trans.Tpo -c -o bigcomplex_trans.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigcomplex_trans.Tpo $(DEPDIR)/bigcomplex_trans.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc' object='bigcomplex_trans.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigcomplex_trans.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigcomplex/bigcomplex_trans.cc

bigfloat.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat.lo -MD -MP -MF $(DEPDIR)/bigfloat.Tpo -c -o bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat.Tpo $(DEPDIR)/bigfloat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc' object='bigfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat.cc

bigfloat2.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat2.lo -MD -MP -MF $(DEPDIR)/bigfloat2.Tpo -c -o bigfloat2.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat2.Tpo $(DEPDIR)/bigfloat2.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc' object='bigfloat2.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat2.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat2.cc

bigfloat_const.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_const.lo -MD -MP -MF $(DEPDIR)/bigfloat_const.Tpo -c -o bigfloat_const.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_const.Tpo $(DEPDIR)/bigfloat_const.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc' object='bigfloat_const.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_const.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_const.cc

bigfloat_exp.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_exp.lo -MD -MP -MF $(DEPDIR)/bigfloat_exp.Tpo -c -o bigfloat_exp.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_exp.Tpo $(DEPDIR)/bigfloat_exp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc' object='bigfloat_exp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_exp.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_exp.cc

bigfloat_hyp.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_hyp.lo -MD -MP -MF $(DEPDIR)/bigfloat_hyp.Tpo -c -o bigfloat_hyp.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_hyp.Tpo $(DEPDIR)/bigfloat_hyp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc' object='bigfloat_hyp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_hyp.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_hyp.cc

bigfloat_io.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_io.lo -MD -MP -MF $(DEPDIR)/bigfloat_io.Tpo -c -o bigfloat_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_io.Tpo $(DEPDIR)/bigfloat_io.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc' object='bigfloat_io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_io.cc

bigfloat_miscfunc.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_miscfunc.lo -MD -MP -MF $(DEPDIR)/bigfloat_miscfunc.Tpo -c -o bigfloat_miscfunc.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_miscfunc.Tpo $(DEPDIR)/bigfloat_miscfunc.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc' object='bigfloat_miscfunc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_miscfunc.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_miscfunc.cc

bigfloat_trig.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_trig.lo -MD -MP -MF $(DEPDIR)/bigfloat_trig.Tpo -c -o bigfloat_trig.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_trig.Tpo $(DEPDIR)/bigfloat_trig.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc' object='bigfloat_trig.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_trig.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat/bigfloat_trig.cc

bigfloat_int.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_int.lo -MD -MP -MF $(DEPDIR)/bigfloat_int.Tpo -c -o bigfloat_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_int.Tpo $(DEPDIR)/bigfloat_int.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc' object='bigfloat_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_int.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int.cc

bigfloat_int_trans.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigfloat_int_trans.lo -MD -MP -MF $(DEPDIR)/bigfloat_int_trans.Tpo -c -o bigfloat_int_trans.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigfloat_int_trans.Tpo $(DEPDIR)/bigfloat_int_trans.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc' object='bigfloat_int_trans.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigfloat_int_trans.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigfloat_int/bigfloat_int_trans.cc

bigint_share.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint_share.lo -MD -MP -MF $(DEPDIR)/bigint_share.Tpo -c -o bigint_share.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint_share.Tpo $(DEPDIR)/bigint_share.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc' object='bigint_share.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint_share.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/bigint_share.cc

chinese_remainder.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT chinese_remainder.lo -MD -MP -MF $(DEPDIR)/chinese_remainder.Tpo -c -o chinese_remainder.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/chinese_remainder.Tpo $(DEPDIR)/chinese_remainder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc' object='chinese_remainder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chinese_remainder.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/chinese_remainder.cc

cornacchia.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cornacchia.lo -MD -MP -MF $(DEPDIR)/cornacchia.Tpo -c -o cornacchia.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/cornacchia.Tpo $(DEPDIR)/cornacchia.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc' object='cornacchia.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cornacchia.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/cornacchia.cc

fermat.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fermat.lo -MD -MP -MF $(DEPDIR)/fermat.Tpo -c -o fermat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/fermat.Tpo $(DEPDIR)/fermat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc' object='fermat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fermat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/fermat.cc

is_power.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_power.lo -MD -MP -MF $(DEPDIR)/is_power.Tpo -c -o is_power.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_power.Tpo $(DEPDIR)/is_power.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc' object='is_power.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_power.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_power.cc

is_prime.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_prime.lo -MD -MP -MF $(DEPDIR)/is_prime.Tpo -c -o is_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_prime.Tpo $(DEPDIR)/is_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc' object='is_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_prime.cc

is_square.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT is_square.lo -MD -MP -MF $(DEPDIR)/is_square.Tpo -c -o is_square.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/is_square.Tpo $(DEPDIR)/is_square.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc' object='is_square.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o is_square.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/is_square.cc

jacobi.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jacobi.lo -MD -MP -MF $(DEPDIR)/jacobi.Tpo -c -o jacobi.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/jacobi.Tpo $(DEPDIR)/jacobi.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc' object='jacobi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jacobi.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/jacobi.cc

multiple_gcd.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiple_gcd.lo -MD -MP -MF $(DEPDIR)/multiple_gcd.Tpo -c -o multiple_gcd.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/multiple_gcd.Tpo $(DEPDIR)/multiple_gcd.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc' object='multiple_gcd.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiple_gcd.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/multiple_gcd.cc

nearest.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nearest.lo -MD -MP -MF $(DEPDIR)/nearest.Tpo -c -o nearest.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/nearest.Tpo $(DEPDIR)/nearest.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc' object='nearest.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nearest.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/nearest.cc

newton_root.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT newton_root.lo -MD -MP -MF $(DEPDIR)/newton_root.Tpo -c -o newton_root.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/newton_root.Tpo $(DEPDIR)/newton_root.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc' object='newton_root.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o newton_root.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/newton_root.cc

next_prime.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT next_prime.lo -MD -MP -MF $(DEPDIR)/next_prime.Tpo -c -o next_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/next_prime.Tpo $(DEPDIR)/next_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc' object='next_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o next_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/next_prime.cc

power_mod.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT power_mod.lo -MD -MP -MF $(DEPDIR)/power_mod.Tpo -c -o power_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/power_mod.Tpo $(DEPDIR)/power_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc' object='power_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o power_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/power_mod.cc

previous_prime.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT previous_prime.lo -MD -MP -MF $(DEPDIR)/previous_prime.Tpo -c -o previous_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/previous_prime.Tpo $(DEPDIR)/previous_prime.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc' object='previous_prime.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o previous_prime.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/previous_prime.cc

ressol.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ressol.lo -MD -MP -MF $(DEPDIR)/ressol.Tpo -c -o ressol.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ressol.Tpo $(DEPDIR)/ressol.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc' object='ressol.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ressol.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigint/ressol.cc

base_bigmod.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT base_bigmod.lo -MD -MP -MF $(DEPDIR)/base_bigmod.Tpo -c -o base_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/base_bigmod.Tpo $(DEPDIR)/base_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc' object='base_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o base_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/base_bigmod.cc

bigmod.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigmod.lo -MD -MP -MF $(DEPDIR)/bigmod.Tpo -c -o bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigmod.Tpo $(DEPDIR)/bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc' object='bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod.cc

bigmod_lib.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigmod_lib.lo -MD -MP -MF $(DEPDIR)/bigmod_lib.Tpo -c -o bigmod_lib.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigmod_lib.Tpo $(DEPDIR)/bigmod_lib.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc' object='bigmod_lib.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigmod_lib.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/bigmod_lib.cc

multi_bigmod.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multi_bigmod.lo -MD -MP -MF $(DEPDIR)/multi_bigmod.Tpo -c -o multi_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/multi_bigmod.Tpo $(DEPDIR)/multi_bigmod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc' object='multi_bigmod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multi_bigmod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigmod/multi_bigmod.cc

bigrational.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigrational.lo -MD -MP -MF $(DEPDIR)/bigrational.Tpo -c -o bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigrational.Tpo $(DEPDIR)/bigrational.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc' object='bigrational.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigrational.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational.cc

bigrational_io.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigrational_io.lo -MD -MP -MF $(DEPDIR)/bigrational_io.Tpo -c -o bigrational_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigrational_io.Tpo $(DEPDIR)/bigrational_io.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc' object='bigrational_io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigrational_io.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/bigrational/bigrational_io.cc

crt.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crt.lo -MD -MP -MF $(DEPDIR)/crt.Tpo -c -o crt.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/crt.Tpo $(DEPDIR)/crt.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc' object='crt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crt.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt.cc

crt_table.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crt_table.lo -MD -MP -MF $(DEPDIR)/crt_table.Tpo -c -o crt_table.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/crt_table.Tpo $(DEPDIR)/crt_table.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc' object='crt_table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crt_table.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/chinese_rem/crt_table.cc

ec_point.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ec_point.lo -MD -MP -MF $(DEPDIR)/ec_point.Tpo -c -o ec_point.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ec_point.Tpo $(DEPDIR)/ec_point.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc' object='ec_point.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ec_point.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ec_point.cc

ecm.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ecm.lo -MD -MP -MF $(DEPDIR)/ecm.Tpo -c -o ecm.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ecm.Tpo $(DEPDIR)/ecm.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc' object='ecm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ecm.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm.cc

ecm_primes.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ecm_primes.lo -MD -MP -MF $(DEPDIR)/ecm_primes.Tpo -c -o ecm_primes.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ecm_primes.Tpo $(DEPDIR)/ecm_primes.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc' object='ecm_primes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ecm_primes.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/ecm_primes.cc

file_f.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file_f.lo -MD -MP -MF $(DEPDIR)/file_f.Tpo -c -o file_f.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/file_f.Tpo $(DEPDIR)/file_f.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc' object='file_f.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file_f.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/file_f.cc

mpqs.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpqs.lo -MD -MP -MF $(DEPDIR)/mpqs.Tpo -c -o mpqs.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mpqs.Tpo $(DEPDIR)/mpqs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc' object='mpqs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpqs.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/mpqs.cc

rational_factorization.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rational_factorization.lo -MD -MP -MF $(DEPDIR)/rational_factorization.Tpo -c -o rational_factorization.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/rational_factorization.Tpo $(DEPDIR)/rational_factorization.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc' object='rational_factorization.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rational_factorization.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/rational_factorization.cc

trialdiv.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT trialdiv.lo -MD -MP -MF $(DEPDIR)/trialdiv.Tpo -c -o trialdiv.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/trialdiv.Tpo $(DEPDIR)/trialdiv.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc' object='trialdiv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o trialdiv.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/factorization/trialdiv.cc

lanczos.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lanczos.lo -MD -MP -MF $(DEPDIR)/lanczos.Tpo -c -o lanczos.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lanczos.Tpo $(DEPDIR)/lanczos.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc' object='lanczos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lanczos.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos.cc

lanczos_small_matrix.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lanczos_small_matrix.lo -MD -MP -MF $(DEPDIR)/lanczos_small_matrix.Tpo -c -o lanczos_small_matrix.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lanczos_small_matrix.Tpo $(DEPDIR)/lanczos_small_matrix.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc' object='lanczos_small_matrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lanczos_small_matrix.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_small_matrix.cc

lanczos_spmatrix.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lanczos_spmatrix.lo -MD -MP -MF $(DEPDIR)/lanczos_spmatrix.Tpo -c -o lanczos_spmatrix.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lanczos_spmatrix.Tpo $(DEPDIR)/lanczos_spmatrix.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc' object='lanczos_spmatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lanczos_spmatrix.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spmatrix.cc

lanczos_spvector.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lanczos_spvector.lo -MD -MP -MF $(DEPDIR)/lanczos_spvector.Tpo -c -o lanczos_spvector.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lanczos_spvector.Tpo $(DEPDIR)/lanczos_spvector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc' object='lanczos_spvector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lanczos_spvector.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_spvector.cc

lanczos_vblock.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT lanczos_vblock.lo -MD -MP -MF $(DEPDIR)/lanczos_vblock.Tpo -c -o lanczos_vblock.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/lanczos_vblock.Tpo $(DEPDIR)/lanczos_vblock.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc' object='lanczos_vblock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o lanczos_vblock.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/lanczos_vblock.cc

process.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT process.lo -MD -MP -MF $(DEPDIR)/process.Tpo -c -o process.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/process.Tpo $(DEPDIR)/process.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc' object='process.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o process.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/lanczos/process.cc

matrix_GL2Z.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT matrix_GL2Z.lo -MD -MP -MF $(DEPDIR)/matrix_GL2Z.Tpo -c -o matrix_GL2Z.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/matrix_GL2Z.Tpo $(DEPDIR)/matrix_GL2Z.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc' object='matrix_GL2Z.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o matrix_GL2Z.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/matrix_GL2Z.cc

divisors.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT divisors.lo -MD -MP -MF $(DEPDIR)/divisors.Tpo -c -o divisors.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/divisors.Tpo $(DEPDIR)/divisors.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc' object='divisors.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o divisors.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/divisors.cc

modular_functions.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT modular_functions.lo -MD -MP -MF $(DEPDIR)/modular_functions.Tpo -c -o modular_functions.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/modular_functions.Tpo $(DEPDIR)/modular_functions.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc' object='modular_functions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o modular_functions.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/nmbrthry_functions/modular_functions.cc

prime_list.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prime_list.lo -MD -MP -MF $(DEPDIR)/prime_list.Tpo -c -o prime_list.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/prime_list.Tpo $(DEPDIR)/prime_list.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc' object='prime_list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prime_list.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/prime_list/prime_list.cc

single_precision.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT single_precision.lo -MD -MP -MF $(DEPDIR)/single_precision.Tpo -c -o single_precision.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/single_precision.Tpo $(DEPDIR)/single_precision.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc' object='single_precision.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o single_precision.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/single_precision/single_precision.cc

udigit_mod.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit_mod.lo -MD -MP -MF $(DEPDIR)/udigit_mod.Tpo -c -o udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit_mod.Tpo $(DEPDIR)/udigit_mod.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc' object='udigit_mod.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit_mod.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/udigit_mod/udigit_mod.cc

xbigfloat.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xbigfloat.lo -MD -MP -MF $(DEPDIR)/xbigfloat.Tpo -c -o xbigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xbigfloat.Tpo $(DEPDIR)/xbigfloat.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc' object='xbigfloat.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xbigfloat.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xbigfloat/xbigfloat.cc

xdouble.lo: $(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xdouble.lo -MD -MP -MF $(DEPDIR)/xdouble.Tpo -c -o xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/xdouble.Tpo $(DEPDIR)/xdouble.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc' object='xdouble.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xdouble.lo `test -f '$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/simple_classes/xdouble/xdouble.cc

debug.lo: $(LIDIA_BASE_SRCDIR)/system/debug.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT debug.lo -MD -MP -MF $(DEPDIR)/debug.Tpo -c -o debug.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/debug.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/debug.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/debug.Tpo $(DEPDIR)/debug.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/debug.cc' object='debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o debug.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/debug.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/debug.cc

error.lo: $(LIDIA_BASE_SRCDIR)/system/error.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.lo -MD -MP -MF $(DEPDIR)/error.Tpo -c -o error.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/error.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/error.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/error.Tpo $(DEPDIR)/error.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/error.cc' object='error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/error.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/error.cc

file_lidia.lo: $(LIDIA_BASE_SRCDIR)/system/file_lidia.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file_lidia.lo -MD -MP -MF $(DEPDIR)/file_lidia.Tpo -c -o file_lidia.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/file_lidia.Tpo $(DEPDIR)/file_lidia.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc' object='file_lidia.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file_lidia.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/file_lidia.cc

info.lo: $(LIDIA_BASE_SRCDIR)/system/info.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT info.lo -MD -MP -MF $(DEPDIR)/info.Tpo -c -o info.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/info.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/info.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/info.Tpo $(DEPDIR)/info.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/info.cc' object='info.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o info.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/info.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/info.cc

memory.lo: $(LIDIA_BASE_SRCDIR)/system/memory.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT memory.lo -MD -MP -MF $(DEPDIR)/memory.Tpo -c -o memory.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/memory.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/memory.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/memory.Tpo $(DEPDIR)/memory.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/memory.cc' object='memory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o memory.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/memory.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/memory.cc

osstream.lo: $(LIDIA_BASE_SRCDIR)/system/osstream.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT osstream.lo -MD -MP -MF $(DEPDIR)/osstream.Tpo -c -o osstream.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/osstream.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/osstream.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/osstream.Tpo $(DEPDIR)/osstream.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/osstream.cc' object='osstream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o osstream.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/osstream.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/osstream.cc

param_desc.lo: $(LIDIA_BASE_SRCDIR)/system/param_desc.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT param_desc.lo -MD -MP -MF $(DEPDIR)/param_desc.Tpo -c -o param_desc.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/param_desc.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/param_desc.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/param_desc.Tpo $(DEPDIR)/param_desc.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/param_desc.cc' object='param_desc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o param_desc.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/param_desc.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/param_desc.cc

param_desc_instant.lo: $(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT param_desc_instant.lo -MD -MP -MF $(DEPDIR)/param_desc_instant.Tpo -c -o param_desc_instant.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/param_desc_instant.Tpo $(DEPDIR)/param_desc_instant.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc' object='param_desc_instant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o param_desc_instant.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/param_desc_instant.cc

precondition_error.lo: $(LIDIA_BASE_SRCDIR)/system/precondition_error.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT precondition_error.lo -MD -MP -MF $(DEPDIR)/precondition_error.Tpo -c -o precondition_error.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/precondition_error.Tpo $(DEPDIR)/precondition_error.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc' object='precondition_error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o precondition_error.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/precondition_error.cc

precondition_error_instant.lo: $(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT precondition_error_instant.lo -MD -MP -MF $(DEPDIR)/precondition_error_instant.Tpo -c -o precondition_error_instant.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/precondition_error_instant.Tpo $(DEPDIR)/precondition_error_instant.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc' object='precondition_error_instant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o precondition_error_instant.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/precondition_error_instant.cc

random_generator.lo: $(LIDIA_BASE_SRCDIR)/system/random_generator.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT random_generator.lo -MD -MP -MF $(DEPDIR)/random_generator.Tpo -c -o random_generator.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/random_generator.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/random_generator.Tpo $(DEPDIR)/random_generator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/random_generator.cc' object='random_generator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o random_generator.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/random_generator.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/random_generator.cc

signal_lidia.lo: $(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT signal_lidia.lo -MD -MP -MF $(DEPDIR)/signal_lidia.Tpo -c -o signal_lidia.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/signal_lidia.Tpo $(DEPDIR)/signal_lidia.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc' object='signal_lidia.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o signal_lidia.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/signal_lidia.cc

timer.lo: $(LIDIA_BASE_SRCDIR)/system/timer.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer.lo -MD -MP -MF $(DEPDIR)/timer.Tpo -c -o timer.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/timer.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/timer.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/timer.Tpo $(DEPDIR)/timer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/timer.cc' object='timer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/timer.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/timer.cc

warning.lo: $(LIDIA_BASE_SRCDIR)/system/warning.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT warning.lo -MD -MP -MF $(DEPDIR)/warning.Tpo -c -o warning.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/warning.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/warning.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/warning.Tpo $(DEPDIR)/warning.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/system/warning.cc' object='warning.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o warning.lo `test -f '$(LIDIA_BASE_SRCDIR)/system/warning.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/system/warning.cc

vector_error_msg.lo: $(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vector_error_msg.lo -MD -MP -MF $(DEPDIR)/vector_error_msg.Tpo -c -o vector_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/vector_error_msg.Tpo $(DEPDIR)/vector_error_msg.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc' object='vector_error_msg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vector_error_msg.lo `test -f '$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc' || echo '$(srcdir)/'`$(LIDIA_BASE_SRCDIR)/vector/vector_error_msg.cc

stlport.lo: $(LIDIA_PORTAB_SRCDIR)/stlport.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stlport.lo -MD -MP -MF $(DEPDIR)/stlport.Tpo -c -o stlport.lo `test -f '$(LIDIA_PORTAB_SRCDIR)/stlport.cc' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/stlport.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/stlport.Tpo $(DEPDIR)/stlport.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_PORTAB_SRCDIR)/stlport.cc' object='stlport.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stlport.lo `test -f '$(LIDIA_PORTAB_SRCDIR)/stlport.cc' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/stlport.cc

bigint.lo: $(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigint.lo -MD -MP -MF $(DEPDIR)/bigint.Tpo -c -o bigint.lo `test -f '$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bigint.Tpo $(DEPDIR)/bigint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc' object='bigint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigint.lo `test -f '$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/bigint/bigint.cc

udigit.lo: $(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udigit.lo -MD -MP -MF $(DEPDIR)/udigit.Tpo -c -o udigit.lo `test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/udigit.Tpo $(DEPDIR)/udigit.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc' object='udigit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udigit.lo `test -f '$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc' || echo '$(srcdir)/'`$(LIDIA_CONFIG_LINKDIR)/udigit/udigit.cc

bytes_to_int_flag_generator.o: $(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bytes_to_int_flag_generator.o -MD -MP -MF $(DEPDIR)/bytes_to_int_flag_generator.Tpo -c -o bytes_to_int_flag_generator.o `test -f '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bytes_to_int_flag_generator.Tpo $(DEPDIR)/bytes_to_int_flag_generator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc' object='bytes_to_int_flag_generator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bytes_to_int_flag_generator.o `test -f '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc' || echo '$(srcdir)/'`$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc

bytes_to_int_flag_generator.obj: $(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bytes_to_int_flag_generator.obj -MD -MP -MF $(DEPDIR)/bytes_to_int_flag_generator.Tpo -c -o bytes_to_int_flag_generator.obj `if test -f '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; then $(CYGPATH_W) '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/bytes_to_int_flag_generator.Tpo $(DEPDIR)/bytes_to_int_flag_generator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc' object='bytes_to_int_flag_generator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bytes_to_int_flag_generator.obj `if test -f '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; then $(CYGPATH_W) '$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; else $(CYGPATH_W) '$(srcdir)/$(LIDIA_PORTAB_SRCDIR)/bytes_to_int_flag_generator.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-baseincludeHEADERS: $(baseinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(baseincludedir)" || $(MKDIR_P) "$(DESTDIR)$(baseincludedir)"
	@list='$(baseinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(baseincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(baseincludedir)/$$f'"; \
	  $(baseincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(baseincludedir)/$$f"; \
	done

uninstall-baseincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(baseinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(baseincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(baseincludedir)/$$f"; \
	done
install-instantincludeHEADERS: $(instantinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(instantincludedir)" || $(MKDIR_P) "$(DESTDIR)$(instantincludedir)"
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(instantincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  $(instantincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(instantincludedir)/$$f"; \
	done

uninstall-instantincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(instantinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(instantincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(instantincludedir)/$$f"; \
	done
install-matrixincludeHEADERS: $(matrixinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(matrixincludedir)" || $(MKDIR_P) "$(DESTDIR)$(matrixincludedir)"
	@list='$(matrixinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(matrixincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(matrixincludedir)/$$f'"; \
	  $(matrixincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(matrixincludedir)/$$f"; \
	done

uninstall-matrixincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(matrixinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(matrixincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(matrixincludedir)/$$f"; \
	done
install-nodist_kernelincludeHEADERS: $(nodist_kernelinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(kernelincludedir)" || $(MKDIR_P) "$(DESTDIR)$(kernelincludedir)"
	@list='$(nodist_kernelinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_kernelincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(kernelincludedir)/$$f'"; \
	  $(nodist_kernelincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(kernelincludedir)/$$f"; \
	done

uninstall-nodist_kernelincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_kernelinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kernelincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kernelincludedir)/$$f"; \
	done
install-nodist_pkgincludeHEADERS: $(nodist_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(nodist_pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(nodist_pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-nodist_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done
install-specialincludeHEADERS: $(specialinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(specialincludedir)" || $(MKDIR_P) "$(DESTDIR)$(specialincludedir)"
	@list='$(specialinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(specialincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(specialincludedir)/$$f'"; \
	  $(specialincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(specialincludedir)/$$f"; \
	done

uninstall-specialincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(specialinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(specialincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(specialincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(baseincludedir)" "$(DESTDIR)$(instantincludedir)" "$(DESTDIR)$(matrixincludedir)" "$(DESTDIR)$(kernelincludedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(specialincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-baseincludeHEADERS \
	install-instantincludeHEADERS install-matrixincludeHEADERS \
	install-nodist_kernelincludeHEADERS \
	install-nodist_pkgincludeHEADERS install-pkgincludeHEADERS \
	install-specialincludeHEADERS

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-baseincludeHEADERS \
	uninstall-instantincludeHEADERS uninstall-matrixincludeHEADERS \
	uninstall-nodist_kernelincludeHEADERS \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-specialincludeHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

.MAKE: install-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-baseincludeHEADERS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-instantincludeHEADERS install-man \
	install-matrixincludeHEADERS \
	install-nodist_kernelincludeHEADERS \
	install-nodist_pkgincludeHEADERS install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-specialincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-baseincludeHEADERS \
	uninstall-hook uninstall-instantincludeHEADERS \
	uninstall-matrixincludeHEADERS \
	uninstall-nodist_kernelincludeHEADERS \
	uninstall-nodist_pkgincludeHEADERS uninstall-pkgincludeHEADERS \
	uninstall-specialincludeHEADERS


 #

$(LIDIA_CONFIG_INCLUDEDIR)/bytes_to_int_flag.h: bytes_to_int_flag_generator$(EXEEXT)
	./bytes_to_int_flag_generator > $@

# Remove installation subdirectories after uninstalling, unless left non-empty.
uninstall-hook:
	rmdir	$(DESTDIR)$(kernelincludedir) \
		$(DESTDIR)$(instantincludedir) \
		$(DESTDIR)$(specialincludedir) \
		$(DESTDIR)$(matrixincludedir) \
		$(DESTDIR)$(baseincludedir) \
		$(DESTDIR)$(pkgincludedir) \
		2>/dev/null; :

# Delete half-made targets when their commands fail
.DELETE_ON_ERROR:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
